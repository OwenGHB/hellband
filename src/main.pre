# 1 "main.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 332 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "main.c" 2
# 20 "main.c"
# 1 "./angband.h" 1
# 29 "./angband.h"
# 1 "./h-basic.h" 1
# 31 "./h-basic.h"
# 1 "./h-config.h" 1
# 32 "./h-basic.h" 2


# 1 "./h-system.h" 1
# 35 "./h-system.h"
# 1 "/data/data/com.termux/files/usr/include/stdio.h" 1 3 4
# 41 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/sys/cdefs.h" 1 3 4
# 40 "/data/data/com.termux/files/usr/include/sys/cdefs.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/android/api-level.h" 1 3 4
# 32 "/data/data/com.termux/files/usr/include/android/api-level.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/sys/cdefs.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/android/api-level.h" 2 3 4
# 41 "/data/data/com.termux/files/usr/include/sys/cdefs.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/android/versioning.h" 1 3 4
# 42 "/data/data/com.termux/files/usr/include/sys/cdefs.h" 2 3 4
# 42 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/sys/types.h" 1 3 4
# 32 "/data/data/com.termux/files/usr/include/sys/types.h" 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 51 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 62 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 3 4
typedef unsigned int size_t;
# 90 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 3 4
typedef int wchar_t;
# 118 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/__stddef_max_align_t.h" 1 3 4
# 35 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/__stddef_max_align_t.h" 3 4
typedef struct {
  long long __clang_max_align_nonce1
      __attribute__((__aligned__(__alignof__(long long))));
  long double __clang_max_align_nonce2
      __attribute__((__aligned__(__alignof__(long double))));
} max_align_t;
# 119 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 2 3 4
# 33 "/data/data/com.termux/files/usr/include/sys/types.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stdint.h" 1 3 4
# 63 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stdint.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/stdint.h" 1 3 4
# 32 "/data/data/com.termux/files/usr/include/stdint.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/bits/wchar_limits.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/stdint.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 34 "/data/data/com.termux/files/usr/include/stdint.h" 2 3 4


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;




typedef long long __int64_t;
typedef unsigned long long __uint64_t;






typedef int __intptr_t;
typedef unsigned int __uintptr_t;


typedef __int8_t int8_t;
typedef __uint8_t uint8_t;

typedef __int16_t int16_t;
typedef __uint16_t uint16_t;

typedef __int32_t int32_t;
typedef __uint32_t uint32_t;

typedef __int64_t int64_t;
typedef __uint64_t uint64_t;

typedef __intptr_t intptr_t;
typedef __uintptr_t uintptr_t;

typedef int8_t int_least8_t;
typedef uint8_t uint_least8_t;

typedef int16_t int_least16_t;
typedef uint16_t uint_least16_t;

typedef int32_t int_least32_t;
typedef uint32_t uint_least32_t;

typedef int64_t int_least64_t;
typedef uint64_t uint_least64_t;

typedef int8_t int_fast8_t;
typedef uint8_t uint_fast8_t;

typedef int64_t int_fast64_t;
typedef uint64_t uint_fast64_t;







typedef int32_t int_fast16_t;
typedef uint32_t uint_fast16_t;
typedef int32_t int_fast32_t;
typedef uint32_t uint_fast32_t;


typedef uint64_t uintmax_t;
typedef int64_t intmax_t;
# 64 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stdint.h" 2 3 4
# 34 "/data/data/com.termux/files/usr/include/sys/types.h" 2 3 4


# 1 "/data/data/com.termux/files/usr/include/linux/types.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/linux/types.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/types.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/asm/types.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/types.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/asm-generic/types.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/int-ll64.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/asm-generic/int-ll64.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/bitsperlong.h" 1 3 4
# 26 "/data/data/com.termux/files/usr/include/asm/bitsperlong.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/bitsperlong.h" 1 3 4
# 27 "/data/data/com.termux/files/usr/include/asm/bitsperlong.h" 2 3 4
# 22 "/data/data/com.termux/files/usr/include/asm-generic/int-ll64.h" 2 3 4

typedef __signed__ char __s8;
typedef unsigned char __u8;
typedef __signed__ short __s16;
typedef unsigned short __u16;
typedef __signed__ int __s32;
typedef unsigned int __u32;

__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
# 22 "/data/data/com.termux/files/usr/include/asm-generic/types.h" 2 3 4
# 22 "/data/data/com.termux/files/usr/include/asm/types.h" 2 3 4
# 22 "/data/data/com.termux/files/usr/include/linux/types.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/include/linux/posix_types.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/linux/posix_types.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/stddef.h" 1 3 4
# 19 "/data/data/com.termux/files/usr/include/linux/stddef.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/compiler.h" 1 3 4
# 20 "/data/data/com.termux/files/usr/include/linux/stddef.h" 2 3 4
# 22 "/data/data/com.termux/files/usr/include/linux/posix_types.h" 2 3 4


typedef struct {
  unsigned long fds_bits[1024 / (8 * sizeof(long))];
} __kernel_fd_set;
typedef void(* __kernel_sighandler_t) (int);
typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

# 1 "/data/data/com.termux/files/usr/include/asm/posix_types.h" 1 3 4
# 20 "/data/data/com.termux/files/usr/include/asm/posix_types.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/posix_types_32.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/asm/posix_types_32.h" 3 4
typedef unsigned short __kernel_mode_t;

typedef unsigned short __kernel_ipc_pid_t;

typedef unsigned short __kernel_uid_t;
typedef unsigned short __kernel_gid_t;

typedef unsigned short __kernel_old_dev_t;


# 1 "/data/data/com.termux/files/usr/include/asm-generic/posix_types.h" 1 3 4
# 23 "/data/data/com.termux/files/usr/include/asm-generic/posix_types.h" 3 4
typedef long __kernel_long_t;
typedef unsigned long __kernel_ulong_t;


typedef __kernel_ulong_t __kernel_ino_t;





typedef int __kernel_pid_t;
# 43 "/data/data/com.termux/files/usr/include/asm-generic/posix_types.h" 3 4
typedef __kernel_long_t __kernel_suseconds_t;


typedef int __kernel_daddr_t;


typedef unsigned int __kernel_uid32_t;
typedef unsigned int __kernel_gid32_t;


typedef __kernel_uid_t __kernel_old_uid_t;
typedef __kernel_gid_t __kernel_old_gid_t;






typedef unsigned int __kernel_size_t;
typedef int __kernel_ssize_t;
typedef int __kernel_ptrdiff_t;







typedef struct {
  int val[2];
} __kernel_fsid_t;

typedef __kernel_long_t __kernel_off_t;
typedef long long __kernel_loff_t;
typedef __kernel_long_t __kernel_time_t;
typedef __kernel_long_t __kernel_clock_t;
typedef int __kernel_timer_t;
typedef int __kernel_clockid_t;
typedef char * __kernel_caddr_t;
typedef unsigned short __kernel_uid16_t;
typedef unsigned short __kernel_gid16_t;
# 31 "/data/data/com.termux/files/usr/include/asm/posix_types_32.h" 2 3 4
# 21 "/data/data/com.termux/files/usr/include/asm/posix_types.h" 2 3 4
# 31 "/data/data/com.termux/files/usr/include/linux/posix_types.h" 2 3 4
# 24 "/data/data/com.termux/files/usr/include/linux/types.h" 2 3 4


typedef __u16 __le16;
typedef __u16 __be16;
typedef __u32 __le32;
typedef __u32 __be32;
typedef __u64 __le64;
typedef __u64 __be64;
typedef __u16 __sum16;
typedef __u32 __wsum;
# 37 "/data/data/com.termux/files/usr/include/sys/types.h" 2 3 4


# 1 "/data/data/com.termux/files/usr/include/bits/pthread_types.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/bits/pthread_types.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/sys/types.h" 1 3 4
# 34 "/data/data/com.termux/files/usr/include/bits/pthread_types.h" 2 3 4

typedef struct {
  uint32_t flags;
  void* stack_base;
  size_t stack_size;
  size_t guard_size;
  int32_t sched_policy;
  int32_t sched_priority;



} pthread_attr_t;
# 61 "/data/data/com.termux/files/usr/include/bits/pthread_types.h" 3 4
typedef struct {



  int32_t __private[1];

} pthread_cond_t;

typedef long pthread_condattr_t;

typedef int pthread_key_t;

typedef struct {



  int32_t __private[1];

} pthread_mutex_t;

typedef long pthread_mutexattr_t;

typedef int pthread_once_t;

typedef struct {



  int32_t __private[10];

} pthread_rwlock_t;

typedef long pthread_rwlockattr_t;
# 105 "/data/data/com.termux/files/usr/include/bits/pthread_types.h" 3 4
typedef long pthread_t;
# 40 "/data/data/com.termux/files/usr/include/sys/types.h" 2 3 4


typedef __kernel_gid32_t __gid_t;
typedef __gid_t gid_t;
typedef __kernel_uid32_t __uid_t;
typedef __uid_t uid_t;
typedef __kernel_pid_t __pid_t;
typedef __pid_t pid_t;
typedef uint32_t __id_t;
typedef __id_t id_t;

typedef unsigned long blkcnt_t;
typedef unsigned long blksize_t;
typedef __kernel_caddr_t caddr_t;
typedef __kernel_clock_t clock_t;

typedef __kernel_clockid_t __clockid_t;
typedef __clockid_t clockid_t;

typedef __kernel_daddr_t daddr_t;
typedef unsigned long fsblkcnt_t;
typedef unsigned long fsfilcnt_t;

typedef __kernel_mode_t __mode_t;
typedef __mode_t mode_t;

typedef __kernel_key_t __key_t;
typedef __key_t key_t;

typedef __kernel_ino_t __ino_t;
typedef __ino_t ino_t;

typedef uint64_t ino64_t;

typedef uint32_t __nlink_t;
typedef __nlink_t nlink_t;

typedef void* __timer_t;
typedef __timer_t timer_t;

typedef __kernel_suseconds_t __suseconds_t;
typedef __suseconds_t suseconds_t;


typedef uint32_t __useconds_t;
typedef __useconds_t useconds_t;



typedef uint32_t dev_t;





typedef __kernel_time_t __time_t;
typedef __time_t time_t;







typedef __kernel_off_t off_t;
typedef __kernel_loff_t loff_t;
typedef loff_t off64_t;




typedef int32_t __socklen_t;




typedef __socklen_t socklen_t;

typedef __builtin_va_list __va_list;
# 127 "/data/data/com.termux/files/usr/include/sys/types.h" 3 4
typedef __kernel_ssize_t ssize_t;


typedef unsigned int uint_t;
typedef unsigned int uint;


typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;
typedef unsigned long u_long;

typedef uint32_t u_int32_t;
typedef uint16_t u_int16_t;
typedef uint8_t u_int8_t;
typedef uint64_t u_int64_t;
# 43 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stdarg.h" 1 3 4
# 30 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stdarg.h" 3 4
typedef __builtin_va_list va_list;
# 48 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 45 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 46 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/include/string.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/string.h" 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 34 "/data/data/com.termux/files/usr/include/string.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/xlocale.h" 1 3 4
# 35 "/data/data/com.termux/files/usr/include/xlocale.h" 3 4
struct __locale_t;
typedef struct __locale_t* locale_t;
# 35 "/data/data/com.termux/files/usr/include/string.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/include/bits/strcasecmp.h" 1 3 4
# 38 "/data/data/com.termux/files/usr/include/bits/strcasecmp.h" 3 4
int strcasecmp(const char* __s1, const char* __s2) __attribute__((__pure__));





int strncasecmp(const char* __s1, const char* __s2, size_t __n) __attribute__((__pure__));
# 37 "/data/data/com.termux/files/usr/include/string.h" 2 3 4







void* memccpy(void* __dst, const void* __src, int __stop_char, size_t __n);
void* memchr(const void* __s, int __ch, size_t __n) __attribute__((__pure__)) ;




void* memrchr(const void* __s, int __ch, size_t __n) __attribute__((__pure__)) ;

int memcmp(const void* __lhs, const void* __rhs, size_t __n) __attribute__((__pure__));
void* memcpy(void*, const void*, size_t)
                                             ;







void* memmove(void* __dst, const void* __src, size_t __n) ;
void* memset(void* __dst, int __ch, size_t __n) ;
void* memmem(const void* __haystack, size_t __haystack_size, const void* __needle, size_t __needle_size) __attribute__((__pure__));

char* strchr(const char* __s, int __ch) __attribute__((__pure__)) ;


char* __strchr_chk(const char* __s, int __ch, size_t __n) __attribute__((annotate("introduced_in=" "18")));
# 88 "/data/data/com.termux/files/usr/include/string.h" 3 4
char* strrchr(const char* __s, int __ch) __attribute__((__pure__)) ;


char* __strrchr_chk(const char* __s, int __ch, size_t __n) __attribute__((annotate("introduced_in=" "18")));



size_t strlen(const char* __s) __attribute__((__pure__)) ;


size_t __strlen_chk(const char* __s, size_t __n) __attribute__((annotate("introduced_in=" "17")));



int strcmp(const char* __lhs, const char* __rhs) __attribute__((__pure__));


char* stpcpy(char* __dst, const char* __src) __attribute__((annotate("introduced_in=" "21")));


char* strcpy(char* __dst, const char* __src) ;
char* strcat(char* __dst, const char* __src) ;
char* strdup(const char* __s);

char* strstr(const char* __haystack, const char* __needle) __attribute__((__pure__));




char* strcasestr(const char* __haystack, const char* __needle) __attribute__((__pure__));

char* strtok(char* __s, const char* __delimiter);
char* strtok_r(char* __s, const char* __delimiter, char** __pos_ptr);

char* strerror(int __errno_value);
# 131 "/data/data/com.termux/files/usr/include/string.h" 3 4
int strerror_r(int __errno_value, char* __buf, size_t __n);


size_t strnlen(const char* __s, size_t __n) __attribute__((__pure__));
char* strncat(char* __dst, const char* __src, size_t __n) ;
char* strndup(const char* __s, size_t __n);
int strncmp(const char* __lhs, const char* __rhs, size_t __n) __attribute__((__pure__));


char* stpncpy(char* __dst, const char* __src, size_t __n) __attribute__((annotate("introduced_in=" "21")));


char* strncpy(char* __dst, const char* __src, size_t __n) ;

size_t strlcat(char* __dst, const char* __src, size_t __n) ;
size_t strlcpy(char* __dst, const char* __src, size_t __n) ;

size_t strcspn(const char* __s, const char* __reject) __attribute__((__pure__));
char* strpbrk(const char* __s, const char* __accept) __attribute__((__pure__));
char* strsep(char** __s_ptr, const char* __delimiter);
size_t strspn(const char* __s, const char* __accept);

char* strsignal(int __signal);

int strcoll(const char* __lhs, const char* __rhs) __attribute__((__pure__));
size_t strxfrm(char* __dst, const char* __src, size_t __n);


int strcoll_l(const char* __lhs, const char* __rhs, locale_t __l) __attribute__((__pure__)) __attribute__((annotate("introduced_in=" "21")));
size_t strxfrm_l(char* __dst, const char* __src, size_t __n, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
# 48 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/fcntl.h" 1 3 4
# 19 "/data/data/com.termux/files/usr/include/asm/fcntl.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/fcntl.h" 1 3 4
# 121 "/data/data/com.termux/files/usr/include/asm-generic/fcntl.h" 3 4
struct f_owner_ex {
  int type;
  __kernel_pid_t pid;
};
# 148 "/data/data/com.termux/files/usr/include/asm-generic/fcntl.h" 3 4
struct flock {
  short l_type;
  short l_whence;
  __kernel_off_t l_start;
  __kernel_off_t l_len;
  __kernel_pid_t l_pid;

};





struct flock64 {
  short l_type;
  short l_whence;
  __kernel_loff_t l_start;
  __kernel_loff_t l_len;
  __kernel_pid_t l_pid;

};
# 20 "/data/data/com.termux/files/usr/include/asm/fcntl.h" 2 3 4
# 49 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/include/bits/seek_constants.h" 1 3 4
# 51 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4


# 1 "/data/data/com.termux/files/usr/include/bits/struct_file.h" 1 3 4
# 42 "/data/data/com.termux/files/usr/include/bits/struct_file.h" 3 4
struct __sbuf {
 unsigned char *_base;
 int _size;
};





typedef __kernel_off_t _struct_file_off_t;


struct __sFILE {
 unsigned char *_p;
 int _r;
 int _w;




 short _flags;
 short _file;

 struct __sbuf _bf;
 int _lbfsize;


 void *_cookie;
 int (*_close)(void *);
 int (*_read)(void *, char *, int);
 _struct_file_off_t (*_seek)(void *, _struct_file_off_t, int);
 int (*_write)(void *, const char *, int);


 struct __sbuf _ext;

 unsigned char *_up;
 int _ur;


 unsigned char _ubuf[3];
 unsigned char _nbuf[1];


 struct __sbuf _lb;


 int _blksize;
 _struct_file_off_t _offset;
};
# 54 "/data/data/com.termux/files/usr/include/stdio.h" 2 3 4




typedef off_t fpos_t;
typedef off64_t fpos64_t;

struct __sFILE;
typedef struct __sFILE FILE;
# 75 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
extern FILE __sF[] __attribute__((annotate("obsoleted_in=" "23")));
# 109 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
void clearerr(FILE* __fp);
int fclose(FILE* __fp);
int feof(FILE* __fp);
int ferror(FILE* __fp);
int fflush(FILE* __fp);
int fgetc(FILE* __fp);
char* fgets(char* __buf, int __size, FILE* __fp) ;
int fprintf(FILE* __fp , const char* __fmt, ...) __attribute__((__format__(printf, 2, 3)));
int fputc(int __ch, FILE* __fp);
int fputs(const char* __s, FILE* __fp);
size_t fread(void* __buf, size_t __size, size_t __count, FILE* __fp) ;
int fscanf(FILE* __fp, const char* __fmt, ...) __attribute__((__format__(scanf, 2, 3)));
size_t fwrite(const void* __buf, size_t __size, size_t __count, FILE* __fp) ;
int getc(FILE* __fp);
int getchar(void);


ssize_t getdelim(char** __line_ptr, size_t* __line_length_ptr, int __delimiter, FILE* __fp) __attribute__((annotate("introduced_in=" "18")));
ssize_t getline(char** __line_ptr, size_t* __line_length_ptr, FILE* __fp) __attribute__((annotate("introduced_in=" "18")));



void perror(const char* __msg);
int printf(const char* __fmt, ...) __attribute__((__format__(printf, 1, 2)));
int putc(int __ch, FILE* __fp);
int putchar(int __ch);
int puts(const char* __s);
int remove(const char* __path);
void rewind(FILE* __fp);
int scanf(const char* __fmt, ...) __attribute__((__format__(scanf, 1, 2)));
void setbuf(FILE* __fp, char* __buf);
int setvbuf(FILE* __fp, char* __buf, int __mode, size_t __size);
int sscanf(const char* __s, const char* __fmt, ...) __attribute__((__format__(scanf, 2, 3)));
int ungetc(int __ch, FILE* __fp);
int vfprintf(FILE* __fp, const char* __fmt, va_list __args) __attribute__((__format__(printf, 2, 0)));
int vprintf(const char* __fp, va_list __args) __attribute__((__format__(printf, 1, 0)));


int dprintf(int __fd, const char* __fmt, ...) __attribute__((__format__(printf, 2, 3))) __attribute__((annotate("introduced_in=" "21")));
int vdprintf(int __fd, const char* __fmt, va_list __args) __attribute__((__format__(printf, 2, 0))) __attribute__((annotate("introduced_in=" "21")));
# 165 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
int sprintf(char* __s, const char* __fmt, ...)
    __attribute__((__format__(printf, 2, 3)))
                                          ;
int vsprintf(char* __s, const char* __fmt, va_list __args)
                   __attribute__((__format__(printf, 2, 0)))
                                                                        ;
char* tmpnam(char* __s)
    __attribute__((deprecated("tempnam is unsafe, use mkstemp or tmpfile instead")));

char* tempnam(const char* __dir, const char* __prefix)
    __attribute__((deprecated("tempnam is unsafe, use mkstemp or tmpfile instead")));

int rename(const char* __old_path, const char* __new_path);
int renameat(int __old_dir_fd, const char* __old_path, int __new_dir_fd, const char* __new_path);

int fseek(FILE* __fp, long __offset, int __whence);
long ftell(FILE* __fp);
# 204 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
int fgetpos(FILE* __fp, fpos_t* __pos);
int fsetpos(FILE* __fp, const fpos_t* __pos);
int fseeko(FILE* __fp, off_t __offset, int __whence);
off_t ftello(FILE* __fp);
# 236 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
FILE* fopen(const char* __path, const char* __mode);





FILE* freopen(const char* __path, const char* __mode, FILE* __fp);
# 253 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
int snprintf(char* __buf, size_t __size, const char* __fmt, ...)
    __attribute__((__format__(printf, 3, 4))) ;
int vfscanf(FILE* __fp, const char* __fmt, va_list __args) __attribute__((__format__(scanf, 2, 0)));
int vscanf(const char* __fmt , va_list __args) __attribute__((__format__(scanf, 1, 0)));
int vsnprintf(char* __buf, size_t __size, const char* __fmt, va_list __args)
    __attribute__((__format__(printf, 3, 0))) ;
int vsscanf(const char* __s, const char* __fmt, va_list __args) __attribute__((__format__(scanf, 2, 0)));







static __inline__ char* ctermid(char* s) {
 if (s == 0) return (char*) "/dev/tty";
 strcpy(s, "/dev/tty");
 return s;
}

FILE* fdopen(int __fd, const char* __mode);
int fileno(FILE* __fp);
int pclose(FILE* __fp);
FILE* popen(const char* __command, const char* __mode);
void flockfile(FILE* __fp);
int ftrylockfile(FILE* __fp);
void funlockfile(FILE* __fp);
int getc_unlocked(FILE* __fp);
int getchar_unlocked(void);
int putc_unlocked(int __ch, FILE* __fp);
int putchar_unlocked(int __ch);
# 293 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
int asprintf(char** __s_ptr, const char* __fmt, ...) __attribute__((__format__(printf, 2, 3)));
char* fgetln(FILE* __fp, size_t* __length_ptr);
int fpurge(FILE* __fp);
void setbuffer(FILE* __fp, char* __buf, int __size);
int setlinebuf(FILE* __fp);
int vasprintf(char** __s_ptr, const char* __fmt, va_list __args) __attribute__((__format__(printf, 2, 0)));
# 319 "/data/data/com.termux/files/usr/include/stdio.h" 3 4
int open(const char*, int, ...) ;
extern pid_t getpid();
extern int unlink(const char*);
void free(void* p);
uint32_t arc4random(void);
static __inline__ FILE* tmpfile() {
 int p = getpid();
 char* path;
 int i;
 for (i = 0; i < 100; i++) {
  unsigned int r = arc4random();
  if (asprintf(&path, "/data/data/com.termux/files/usr/tmp/tmpfile.%d-%u", p, r) == -1) return ((void*)0);
  int fd = open(path, 00000002 | 00000100 | 00000200 | 00100000, 0600);
  free(path);
  if (fd >= 0) {
   FILE* result = fdopen(fd, "w+");
   unlink(path);
   return result;
  }
 }
 return ((void*)0);
}
# 36 "./h-system.h" 2
# 1 "/data/data/com.termux/files/usr/include/ctype.h" 1 3 4
# 62 "/data/data/com.termux/files/usr/include/ctype.h" 3 4
extern const char* _ctype_;

int isalnum(int __ch);
int isalpha(int __ch);
int isblank(int __ch);
int iscntrl(int __ch);
int isdigit(int __ch);
int isgraph(int __ch);
int islower(int __ch);
int isprint(int __ch);
int ispunct(int __ch);
int isspace(int __ch);
int isupper(int __ch);
int isxdigit(int __ch);
int tolower(int __ch);
int toupper(int __ch);


int isalnum_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isalpha_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isblank_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int iscntrl_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isdigit_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isgraph_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int islower_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isprint_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int ispunct_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isspace_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isupper_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int isxdigit_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int tolower_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
int toupper_l(int __ch, locale_t __l) __attribute__((annotate("introduced_in=" "21")));




int isascii(int __ch);
int toascii(int __ch);


int _tolower(int __ch) __attribute__((annotate("introduced_in=" "21")));
int _toupper(int __ch) __attribute__((annotate("introduced_in=" "21")));
# 37 "./h-system.h" 2
# 1 "/data/data/com.termux/files/usr/include/errno.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/errno.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/errno.h" 1 3 4
# 19 "/data/data/com.termux/files/usr/include/linux/errno.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/errno.h" 1 3 4
# 19 "/data/data/com.termux/files/usr/include/asm/errno.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/errno.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/asm-generic/errno.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/errno-base.h" 1 3 4
# 22 "/data/data/com.termux/files/usr/include/asm-generic/errno.h" 2 3 4
# 20 "/data/data/com.termux/files/usr/include/asm/errno.h" 2 3 4
# 20 "/data/data/com.termux/files/usr/include/linux/errno.h" 2 3 4
# 34 "/data/data/com.termux/files/usr/include/errno.h" 2 3 4








int* __errno(void) __attribute__((__const__));





# 1 "/data/data/com.termux/files/usr/include/android/legacy_errno_inlines.h" 1 3 4
# 48 "/data/data/com.termux/files/usr/include/errno.h" 2 3 4
# 38 "./h-system.h" 2




# 1 "/data/data/com.termux/files/usr/include/stdlib.h" 1 3 4
# 35 "/data/data/com.termux/files/usr/include/stdlib.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/alloca.h" 1 3 4
# 36 "/data/data/com.termux/files/usr/include/stdlib.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/malloc.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/malloc.h" 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 22 "/data/data/com.termux/files/usr/include/malloc.h" 2 3 4
# 33 "/data/data/com.termux/files/usr/include/malloc.h" 3 4
void* malloc(size_t __byte_count) __attribute__((__malloc__)) __attribute__((__alloc_size__(1))) __attribute__((__warn_unused_result__));
void* calloc(size_t __item_count, size_t __item_size) __attribute__((__malloc__)) __attribute__((__alloc_size__(1,2))) __attribute__((__warn_unused_result__));
void* realloc(void* __ptr, size_t __byte_count) __attribute__((__alloc_size__(2))) __attribute__((__warn_unused_result__));
void free(void* __ptr);

void* memalign(size_t __alignment, size_t __byte_count) __attribute__((__malloc__)) __attribute__((__alloc_size__(2))) __attribute__((__warn_unused_result__));


size_t malloc_usable_size(const void* __ptr) __attribute__((annotate("introduced_in=" "17")));





struct mallinfo {
  size_t arena;
  size_t ordblks;
  size_t smblks;
  size_t hblks;
  size_t hblkhd;
  size_t usmblks;
  size_t fsmblks;
  size_t uordblks;
  size_t fordblks;
  size_t keepcost;
};


struct mallinfo mallinfo(void);
# 37 "/data/data/com.termux/files/usr/include/stdlib.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 38 "/data/data/com.termux/files/usr/include/stdlib.h" 2 3 4







__attribute__((__noreturn__)) void abort(void);
__attribute__((__noreturn__)) void exit(int __status);

__attribute__((__noreturn__)) void _Exit(int __status) __attribute__((annotate("introduced_in=" "21")));




int atexit(void (*__fn)(void));



int at_quick_exit(void (*__fn)(void)) __attribute__((annotate("introduced_in=" "21")));
void quick_exit(int __status) __attribute__((__noreturn__)) __attribute__((annotate("introduced_in=" "21")));



char* getenv(const char* __name);
int putenv(char* __assignment);
int setenv(const char* __name, const char* __value, int __overwrite);
int unsetenv(const char* __name);
int clearenv(void);

char* mkdtemp(char* __template);
char* mktemp(char* __template) __attribute__((deprecated("mktemp is unsafe, use mkstemp or tmpfile instead")));
# 81 "/data/data/com.termux/files/usr/include/stdlib.h" 3 4
int mkstemp64(char* __template) __attribute__((annotate("introduced_in=" "21")));


int mkstemp(char* __template);





int mkstemps(char* __template, int __flags);

long strtol(const char* __s, char** __end_ptr, int __base);
long long strtoll(const char* __s, char** __end_ptr, int __base);
unsigned long strtoul(const char* __s, char** __end_ptr, int __base);
unsigned long long strtoull(const char* __s, char** __end_ptr, int __base);



int posix_memalign(void** __memptr, size_t __alignment, size_t __size) __attribute__((annotate("introduced_in=" "16")));



double strtod(const char* __s, char** __end_ptr);
long double strtold(const char* __s, char** __end_ptr) __asm__("strtod") __attribute__((annotate("introduced_in=" "3")));







int atoi(const char* __s) __attribute__((__pure__));
long atol(const char* __s) __attribute__((__pure__));
long long atoll(const char* __s) __attribute__((__pure__));

char* realpath(const char* __path, char* __resolved);
int system(const char* __command);

void* bsearch(const void* __key, const void* __base, size_t __nmemb, size_t __size, int (*__comparator)(const void* __lhs, const void* __rhs));

void qsort(void* __base, size_t __nmemb, size_t __size, int (*__comparator)(const void* __lhs, const void* __rhs));

uint32_t arc4random(void);
uint32_t arc4random_uniform(uint32_t __upper_bound);
void arc4random_buf(void* __buf, size_t __n);





int rand_r(unsigned int* __seed_ptr) __attribute__((annotate("introduced_in=" "21")));



double drand48(void);
double erand48(unsigned short __xsubi[3]);
long jrand48(unsigned short __xsubi[3]);





long lrand48(void);
long mrand48(void);
long nrand48(unsigned short __xsubi[3]);
unsigned short* seed48(unsigned short __seed16v[3]);
void srand48(long __seed);



char* initstate(unsigned int __seed, char* __state, size_t __n) __attribute__((annotate("introduced_in=" "21")));
char* setstate(char* __state) __attribute__((annotate("introduced_in=" "21")));



int getpt(void);


int posix_openpt(int __flags) __attribute__((annotate("introduced_in=" "21")));


char* ptsname(int __fd);
int ptsname_r(int __fd, char* __buf, size_t __n);
int unlockpt(int __fd);







typedef struct {
  int quot;
  int rem;
} div_t;

div_t div(int __numerator, int __denominator) __attribute__((__const__));

typedef struct {
  long int quot;
  long int rem;
} ldiv_t;

ldiv_t ldiv(long __numerator, long __denominator) __attribute__((__const__));

typedef struct {
  long long int quot;
  long long int rem;
} lldiv_t;

lldiv_t lldiv(long long __numerator, long long __denominator) __attribute__((__const__));




const char* getprogname(void) __attribute__((annotate("introduced_in=" "21")));
void setprogname(const char* __name) __attribute__((annotate("introduced_in=" "21")));



int mblen(const char* __s, size_t __n) __attribute__((annotate("introduced_in=" "26"))) __attribute__((annotate("versioner_no_guard")));
size_t mbstowcs(wchar_t* __dst, const char* __src, size_t __n);
int mbtowc(wchar_t* __wc_ptr, const char* __s, size_t __n) __attribute__((annotate("introduced_in=" "21"))) __attribute__((annotate("versioner_no_guard")));
int wctomb(char* __dst, wchar_t __wc) __attribute__((annotate("introduced_in=" "21"))) __attribute__((annotate("versioner_no_guard")));

size_t wcstombs(char* __dst, const wchar_t* __src, size_t __n);
# 224 "/data/data/com.termux/files/usr/include/stdlib.h" 3 4
float strtof(const char* __s, char** __end_ptr) __attribute__((annotate("introduced_in=" "21")));
double atof(const char* __s) __attribute__((__pure__)) __attribute__((annotate("introduced_in=" "21")));
int abs(int __x) __attribute__((__const__)) __attribute__((annotate("introduced_in=" "21")));
long labs(long __x) __attribute__((__const__)) __attribute__((annotate("introduced_in=" "21")));
long long llabs(long long __x) __attribute__((__const__)) __attribute__((annotate("introduced_in=" "21")));
int rand(void) __attribute__((annotate("introduced_in=" "21")));
void srand(unsigned int __seed) __attribute__((annotate("introduced_in=" "21")));
long random(void) __attribute__((annotate("introduced_in=" "21")));
void srandom(unsigned int __seed) __attribute__((annotate("introduced_in=" "21")));
int grantpt(int __fd) __attribute__((annotate("introduced_in=" "21")));

long long strtoll_l(const char* __s, char** __end_ptr, int __base, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
unsigned long long strtoull_l(const char* __s, char** __end_ptr, int __base, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
long double strtold_l(const char* __s, char** __end_ptr, locale_t __l) __attribute__((annotate("introduced_in=" "21")));
# 247 "/data/data/com.termux/files/usr/include/stdlib.h" 3 4
static __inline__ double strtod_l(const char* __s, char** __end_ptr, locale_t __l) { return strtod(__s, __end_ptr); }
static __inline__ float strtof_l(const char* __s, char** __end_ptr, locale_t __l) { return strtof(__s, __end_ptr); }
static __inline__ long strtol_l(const char* __s, char** __end_ptr, int __b, locale_t __l) { return strtol(__s, __end_ptr, __b); }





# 1 "/data/data/com.termux/files/usr/include/android/legacy_stdlib_inlines.h" 1 3 4
# 255 "/data/data/com.termux/files/usr/include/stdlib.h" 2 3 4
# 43 "./h-system.h" 2
# 54 "./h-system.h"
# 1 "/data/data/com.termux/files/usr/include/sys/time.h" 1 3 4
# 34 "/data/data/com.termux/files/usr/include/sys/time.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/time.h" 1 3 4
# 24 "/data/data/com.termux/files/usr/include/linux/time.h" 3 4
struct timespec {
  __kernel_time_t tv_sec;
  long tv_nsec;
};

struct timeval {
  __kernel_time_t tv_sec;
  __kernel_suseconds_t tv_usec;
};
struct timezone {
  int tz_minuteswest;
  int tz_dsttime;
};



struct itimerspec {
  struct timespec it_interval;
  struct timespec it_value;
};
struct itimerval {
  struct timeval it_interval;
  struct timeval it_value;
};
# 35 "/data/data/com.termux/files/usr/include/sys/time.h" 2 3 4


# 1 "/data/data/com.termux/files/usr/include/sys/select.h" 1 3 4
# 36 "/data/data/com.termux/files/usr/include/sys/select.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/signal.h" 1 3 4
# 35 "/data/data/com.termux/files/usr/include/signal.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/sigcontext.h" 1 3 4
# 26 "/data/data/com.termux/files/usr/include/asm/sigcontext.h" 3 4
struct _fpx_sw_bytes {
  __u32 magic1;
  __u32 extended_size;
  __u64 xfeatures;
  __u32 xstate_size;
  __u32 padding[7];
};
struct _fpreg {
  __u16 significand[4];
  __u16 exponent;
};
struct _fpxreg {
  __u16 significand[4];
  __u16 exponent;
  __u16 padding[3];
};
struct _xmmreg {
  __u32 element[4];
};

struct _fpstate_32 {
  __u32 cw;
  __u32 sw;
  __u32 tag;
  __u32 ipoff;
  __u32 cssel;
  __u32 dataoff;
  __u32 datasel;
  struct _fpreg _st[8];
  __u16 status;
  __u16 magic;
  __u32 _fxsr_env[6];
  __u32 mxcsr;
  __u32 reserved;
  struct _fpxreg _fxsr_st[8];
  struct _xmmreg _xmm[8];
  union {
    __u32 padding1[44];
    __u32 padding[44];
  };
  union {
    __u32 padding2[12];
    struct _fpx_sw_bytes sw_reserved;
  };
};
struct _fpstate_64 {
  __u16 cwd;
  __u16 swd;
  __u16 twd;
  __u16 fop;
  __u64 rip;
  __u64 rdp;
  __u32 mxcsr;
  __u32 mxcsr_mask;
  __u32 st_space[32];
  __u32 xmm_space[64];
  __u32 reserved2[12];
  union {
    __u32 reserved3[12];
    struct _fpx_sw_bytes sw_reserved;
  };
};





struct _header {
  __u64 xfeatures;
  __u64 reserved1[2];
  __u64 reserved2[5];
};
struct _ymmh_state {
  __u32 ymmh_space[64];
};
struct _xstate {
  struct _fpstate_32 fpstate;
  struct _header xstate_hdr;
  struct _ymmh_state ymmh;
};
struct sigcontext_32 {
  __u16 gs, __gsh;
  __u16 fs, __fsh;
  __u16 es, __esh;
  __u16 ds, __dsh;
  __u32 di;
  __u32 si;
  __u32 bp;
  __u32 sp;
  __u32 bx;
  __u32 dx;
  __u32 cx;
  __u32 ax;
  __u32 trapno;
  __u32 err;
  __u32 ip;
  __u16 cs, __csh;
  __u32 flags;
  __u32 sp_at_signal;
  __u16 ss, __ssh;
  __u32 fpstate;
  __u32 oldmask;
  __u32 cr2;
};
struct sigcontext_64 {
  __u64 r8;
  __u64 r9;
  __u64 r10;
  __u64 r11;
  __u64 r12;
  __u64 r13;
  __u64 r14;
  __u64 r15;
  __u64 di;
  __u64 si;
  __u64 bp;
  __u64 bx;
  __u64 dx;
  __u64 ax;
  __u64 cx;
  __u64 sp;
  __u64 ip;
  __u64 flags;
  __u16 cs;
  __u16 gs;
  __u16 fs;
  __u16 ss;
  __u64 err;
  __u64 trapno;
  __u64 oldmask;
  __u64 cr2;
  __u64 fpstate;
  __u64 reserved1[8];
};



struct sigcontext {
  __u16 gs, __gsh;
  __u16 fs, __fsh;
  __u16 es, __esh;
  __u16 ds, __dsh;
  __u32 edi;
  __u32 esi;
  __u32 ebp;
  __u32 esp;
  __u32 ebx;
  __u32 edx;
  __u32 ecx;
  __u32 eax;
  __u32 trapno;
  __u32 err;
  __u32 eip;
  __u16 cs, __csh;
  __u32 eflags;
  __u32 esp_at_signal;
  __u16 ss, __ssh;
  struct _fpstate_32 * fpstate;
  __u32 oldmask;
  __u32 cr2;
};
# 36 "/data/data/com.termux/files/usr/include/signal.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/include/bits/timespec.h" 1 3 4
# 38 "/data/data/com.termux/files/usr/include/signal.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/limits.h" 1 3 4
# 37 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/limits.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/limits.h" 1 3 4
# 41 "/data/data/com.termux/files/usr/include/limits.h" 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/float.h" 1 3 4
# 42 "/data/data/com.termux/files/usr/include/limits.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/include/linux/limits.h" 1 3 4
# 44 "/data/data/com.termux/files/usr/include/limits.h" 2 3 4
# 140 "/data/data/com.termux/files/usr/include/limits.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/bits/posix_limits.h" 1 3 4
# 141 "/data/data/com.termux/files/usr/include/limits.h" 2 3 4
# 38 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/limits.h" 2 3 4
# 39 "/data/data/com.termux/files/usr/include/signal.h" 2 3 4
# 49 "/data/data/com.termux/files/usr/include/signal.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/signal.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/linux/signal.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/signal.h" 1 3 4
# 25 "/data/data/com.termux/files/usr/include/asm/signal.h" 3 4
struct siginfo;

typedef unsigned long sigset_t;
# 77 "/data/data/com.termux/files/usr/include/asm/signal.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/signal-defs.h" 1 3 4
# 32 "/data/data/com.termux/files/usr/include/asm-generic/signal-defs.h" 3 4
typedef void __signalfn_t(int);
typedef __signalfn_t * __sighandler_t;
typedef void __restorefn_t(void);
typedef __restorefn_t * __sigrestore_t;
# 78 "/data/data/com.termux/files/usr/include/asm/signal.h" 2 3 4


struct sigaction {
  union {
    __sighandler_t _sa_handler;
    void(* _sa_sigaction) (int, struct siginfo *, void *);
  } _u;
  sigset_t sa_mask;
  unsigned long sa_flags;
  void(* sa_restorer) (void);
};
# 99 "/data/data/com.termux/files/usr/include/asm/signal.h" 3 4
typedef struct sigaltstack {
  void * ss_sp;
  int ss_flags;
  size_t ss_size;
} stack_t;
# 22 "/data/data/com.termux/files/usr/include/linux/signal.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/siginfo.h" 1 3 4
# 30 "/data/data/com.termux/files/usr/include/asm/siginfo.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/siginfo.h" 1 3 4
# 23 "/data/data/com.termux/files/usr/include/asm-generic/siginfo.h" 3 4
typedef union sigval {
  int sival_int;
  void * sival_ptr;
} sigval_t;
# 47 "/data/data/com.termux/files/usr/include/asm-generic/siginfo.h" 3 4
typedef struct siginfo {
  int si_signo;
  int si_errno;
  int si_code;
  union {
    int _pad[((128 - (3 * sizeof(int))) / sizeof(int))];
    struct {
      __kernel_pid_t _pid;
      __kernel_uid32_t _uid;
    } _kill;
    struct {
      __kernel_timer_t _tid;
      int _overrun;
      char _pad[sizeof(__kernel_uid32_t) - sizeof(int)];
      sigval_t _sigval;
      int _sys_private;
    } _timer;
    struct {
      __kernel_pid_t _pid;
      __kernel_uid32_t _uid;
      sigval_t _sigval;
    } _rt;
    struct {
      __kernel_pid_t _pid;
      __kernel_uid32_t _uid;
      int _status;
      __kernel_clock_t _utime;
      __kernel_clock_t _stime;
    } _sigchld;
    struct {
      void * _addr;



      short _addr_lsb;
      union {
        struct {
          void * _lower;
          void * _upper;
        } _addr_bnd;
        __u32 _pkey;
      };
    } _sigfault;
    struct {
      long _band;
      int _fd;
    } _sigpoll;
    struct {
      void * _call_addr;
      int _syscall;
      unsigned int _arch;
    } _sigsys;
  } _sifields;
} siginfo_t;
# 208 "/data/data/com.termux/files/usr/include/asm-generic/siginfo.h" 3 4
typedef struct sigevent {
  sigval_t sigev_value;
  int sigev_signo;
  int sigev_notify;
  union {
    int _pad[((64 - (sizeof(int) * 2 + sizeof(sigval_t))) / sizeof(int))];
    int _tid;
    struct {
      void(* _function) (sigval_t);
      void * _attribute;
    } _sigev_thread;
  } _sigev_un;
} sigevent_t;
# 31 "/data/data/com.termux/files/usr/include/asm/siginfo.h" 2 3 4
# 23 "/data/data/com.termux/files/usr/include/linux/signal.h" 2 3 4
# 50 "/data/data/com.termux/files/usr/include/signal.h" 2 3 4


# 1 "/data/data/com.termux/files/usr/include/sys/ucontext.h" 1 3 4
# 34 "/data/data/com.termux/files/usr/include/sys/ucontext.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/signal.h" 1 3 4
# 35 "/data/data/com.termux/files/usr/include/sys/ucontext.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/sys/user.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/sys/user.h" 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 34 "/data/data/com.termux/files/usr/include/sys/user.h" 2 3 4
# 43 "/data/data/com.termux/files/usr/include/sys/user.h" 3 4
struct user_fpregs_struct {
  long cwd;
  long swd;
  long twd;
  long fip;
  long fcs;
  long foo;
  long fos;
  long st_space[20];
};
struct user_fpxregs_struct {
  unsigned short cwd;
  unsigned short swd;
  unsigned short twd;
  unsigned short fop;
  long fip;
  long fcs;
  long foo;
  long fos;
  long mxcsr;
  long reserved;
  long st_space[32];
  long xmm_space[32];
  long padding[56];
};
struct user_regs_struct {
  long ebx;
  long ecx;
  long edx;
  long esi;
  long edi;
  long ebp;
  long eax;
  long xds;
  long xes;
  long xfs;
  long xgs;
  long orig_eax;
  long eip;
  long xcs;
  long eflags;
  long esp;
  long xss;
};
struct user {
  struct user_regs_struct regs;
  int u_fpvalid;
  struct user_fpregs_struct i387;
  unsigned long int u_tsize;
  unsigned long int u_dsize;
  unsigned long int u_ssize;
  unsigned long start_code;
  unsigned long start_stack;
  long int signal;
  int reserved;
  struct user_regs_struct* u_ar0;
  struct user_fpregs_struct* u_fpstate;
  unsigned long magic;
  char u_comm[32];
  int u_debugreg[8];
};
# 36 "/data/data/com.termux/files/usr/include/sys/ucontext.h" 2 3 4
# 120 "/data/data/com.termux/files/usr/include/sys/ucontext.h" 3 4
enum {
  REG_GS = 0,

  REG_FS,

  REG_ES,

  REG_DS,

  REG_EDI,

  REG_ESI,

  REG_EBP,

  REG_ESP,

  REG_EBX,

  REG_EDX,

  REG_ECX,

  REG_EAX,

  REG_TRAPNO,

  REG_ERR,

  REG_EIP,

  REG_CS,

  REG_EFL,

  REG_UESP,

  REG_SS,

  NGREG

};

typedef int greg_t;
typedef greg_t gregset_t[NGREG];

struct _libc_fpreg {
  unsigned short significand[4];
  unsigned short exponent;
};

struct _libc_fpstate {
  unsigned long cw;
  unsigned long sw;
  unsigned long tag;
  unsigned long ipoff;
  unsigned long cssel;
  unsigned long dataoff;
  unsigned long datasel;
  struct _libc_fpreg _st[8];
  unsigned long status;
};

typedef struct _libc_fpstate* fpregset_t;

typedef struct {
  gregset_t gregs;
  fpregset_t fpregs;
  unsigned long oldmask;
  unsigned long cr2;
} mcontext_t;

typedef struct ucontext {
  unsigned long uc_flags;
  struct ucontext* uc_link;
  stack_t uc_stack;
  mcontext_t uc_mcontext;
  sigset_t uc_sigmask;

  uint32_t __padding_rt_sigset;
  struct _libc_fpstate __fpregs_mem;
} ucontext_t;
# 53 "/data/data/com.termux/files/usr/include/signal.h" 2 3 4




typedef int sig_atomic_t;
# 78 "/data/data/com.termux/files/usr/include/signal.h" 3 4
int __libc_current_sigrtmin(void) __attribute__((annotate("introduced_in=" "21")));
int __libc_current_sigrtmax(void) __attribute__((annotate("introduced_in=" "21")));



extern const char* const sys_siglist[(64 + 1)];
extern const char* const sys_signame[(64 + 1)];

typedef __sighandler_t sig_t;
typedef __sighandler_t sighandler_t;
# 116 "/data/data/com.termux/files/usr/include/signal.h" 3 4
int sigaction(int __signal, const struct sigaction* __new_action, struct sigaction* __old_action);

int siginterrupt(int __signal, int __flag);


sighandler_t signal(int __signal, sighandler_t __handler) __attribute__((annotate("introduced_in=" "21")));
int sigaddset(sigset_t* __set, int __signal) __attribute__((annotate("introduced_in=" "21")));
int sigdelset(sigset_t* __set, int __signal) __attribute__((annotate("introduced_in=" "21")));
int sigemptyset(sigset_t* __set) __attribute__((annotate("introduced_in=" "21")));
int sigfillset(sigset_t* __set) __attribute__((annotate("introduced_in=" "21")));
int sigismember(const sigset_t* __set, int __signal) __attribute__((annotate("introduced_in=" "21")));




int sigpending(sigset_t* __set);
int sigprocmask(int __how, const sigset_t* __new_set, sigset_t* __old_set);
int sigsuspend(const sigset_t* __mask);
int sigwait(const sigset_t* __set, int* __signal);
# 153 "/data/data/com.termux/files/usr/include/signal.h" 3 4
int raise(int __signal);
int kill(pid_t __pid, int __signal);
int killpg(int __pgrp, int __signal);


int tgkill(int __tgid, int __tid, int __signal) __attribute__((annotate("introduced_in_32=" "16")));



int sigaltstack(const stack_t* __new_signal_stack, stack_t* __old_signal_stack);



void psiginfo(const siginfo_t* __info, const char* __msg) __attribute__((annotate("introduced_in=" "17")));
void psignal(int __signal, const char* __msg) __attribute__((annotate("introduced_in=" "17")));



int pthread_kill(pthread_t __pthread, int __signal);
int pthread_sigmask(int __how, const sigset_t* __new_set, sigset_t* __old_set);
# 184 "/data/data/com.termux/files/usr/include/signal.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/android/legacy_signal_inlines.h" 1 3 4
# 185 "/data/data/com.termux/files/usr/include/signal.h" 2 3 4
# 37 "/data/data/com.termux/files/usr/include/sys/select.h" 2 3 4




typedef unsigned long fd_mask;



typedef struct {
  unsigned long fds_bits[(1024/(8 * sizeof(unsigned long)))];
} fd_set;
# 64 "/data/data/com.termux/files/usr/include/sys/select.h" 3 4
void __FD_CLR_chk(int, fd_set*, size_t) __attribute__((annotate("introduced_in=" "21")));
void __FD_SET_chk(int, fd_set*, size_t) __attribute__((annotate("introduced_in=" "21")));
int __FD_ISSET_chk(int, fd_set const*, size_t) __attribute__((annotate("introduced_in=" "21")));
# 80 "/data/data/com.termux/files/usr/include/sys/select.h" 3 4
int select(int __fd_count, fd_set* __read_fds, fd_set* __write_fds, fd_set* __exception_fds, struct timeval* __timeout);
int pselect(int __fd_count, fd_set* __read_fds, fd_set* __write_fds, fd_set* __exception_fds, const struct timespec* __timeout, const sigset_t* __mask);
# 38 "/data/data/com.termux/files/usr/include/sys/time.h" 2 3 4



int gettimeofday(struct timeval* __tv, struct timezone* __tz);
int settimeofday(const struct timeval* __tv, const struct timezone* __tz);

int getitimer(int __which, struct itimerval* __current_value);
int setitimer(int __which, const struct itimerval* __new_value, struct itimerval* __old_value);

int utimes(const char* __path, const struct timeval __times[2]);
# 55 "./h-system.h" 2
# 64 "./h-system.h"
# 1 "/data/data/com.termux/files/usr/include/time.h" 1 3 4
# 40 "/data/data/com.termux/files/usr/include/time.h" 3 4
extern char* tzname[];
extern int daylight;
extern long int timezone;

struct sigevent;

struct tm {
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
  long int tm_gmtoff;
  const char* tm_zone;
};



time_t time(time_t* __t);
int nanosleep(const struct timespec* __request, struct timespec* __remainder);

char* asctime(const struct tm* __tm);
char* asctime_r(const struct tm* __tm, char* __buf);

double difftime(time_t __lhs, time_t __rhs);
time_t mktime(struct tm* __tm);

struct tm* localtime(const time_t* __t);
struct tm* localtime_r(const time_t* __t, struct tm* __tm);

struct tm* gmtime(const time_t* __t);
struct tm* gmtime_r(const time_t* __t, struct tm* __tm);

char* strptime(const char* __s, const char* __fmt, struct tm* __tm);
size_t strftime(char* __buf, size_t __n, const char* __fmt, const struct tm* __tm);


size_t strftime_l(char* __buf, size_t __n, const char* __fmt, const struct tm* __tm, locale_t __l) __attribute__((annotate("introduced_in=" "21")));




char* ctime(const time_t* __t);
char* ctime_r(const time_t* __t, char* __buf);

void tzset(void);

clock_t clock(void);







int clock_getres(clockid_t __clock, struct timespec* __resolution);
int clock_gettime(clockid_t __clock, struct timespec* __ts);
int clock_nanosleep(clockid_t __clock, int __flags, const struct timespec* __request, struct timespec* __remainder);
int clock_settime(clockid_t __clock, const struct timespec* __ts);

int timer_create(clockid_t __clock, struct sigevent* __event, timer_t* __timer_ptr);
int timer_delete(timer_t __timer);
int timer_settime(timer_t __timer, int __flags, const struct itimerspec* __new_value, struct itimerspec* __old_value);
int timer_gettime(timer_t __timer, struct itimerspec* __ts);
int timer_getoverrun(timer_t __timer);




time_t timelocal(struct tm* __tm) __attribute__((annotate("introduced_in=" "12")));
time_t timegm(struct tm* __tm) __attribute__((annotate("introduced_in=" "12")));
# 65 "./h-system.h" 2
# 81 "./h-system.h"
# 1 "/data/data/com.termux/files/usr/include/memory.h" 1 3 4
# 82 "./h-system.h" 2





# 1 "/data/data/com.termux/files/usr/include/fcntl.h" 1 3 4
# 34 "/data/data/com.termux/files/usr/include/fcntl.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/fadvise.h" 1 3 4
# 35 "/data/data/com.termux/files/usr/include/fcntl.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/falloc.h" 1 3 4
# 36 "/data/data/com.termux/files/usr/include/fcntl.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/fcntl.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/linux/fcntl.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/fcntl.h" 1 3 4
# 22 "/data/data/com.termux/files/usr/include/linux/fcntl.h" 2 3 4
# 37 "/data/data/com.termux/files/usr/include/fcntl.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/stat.h" 1 3 4
# 54 "/data/data/com.termux/files/usr/include/linux/stat.h" 3 4
struct statx_timestamp {
  __s64 tv_sec;
  __u32 tv_nsec;
  __s32 __reserved;
};
struct statx {
  __u32 stx_mask;
  __u32 stx_blksize;
  __u64 stx_attributes;
  __u32 stx_nlink;
  __u32 stx_uid;
  __u32 stx_gid;
  __u16 stx_mode;
  __u16 __spare0[1];
  __u64 stx_ino;
  __u64 stx_size;
  __u64 stx_blocks;
  __u64 stx_attributes_mask;
  struct statx_timestamp stx_atime;
  struct statx_timestamp stx_btime;
  struct statx_timestamp stx_ctime;
  struct statx_timestamp stx_mtime;
  __u32 stx_rdev_major;
  __u32 stx_rdev_minor;
  __u32 stx_dev_major;
  __u32 stx_dev_minor;
  __u64 __spare2[14];
};
# 38 "/data/data/com.termux/files/usr/include/fcntl.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/uio.h" 1 3 4
# 23 "/data/data/com.termux/files/usr/include/linux/uio.h" 3 4
struct iovec {
  void * iov_base;
  __kernel_size_t iov_len;
};
# 39 "/data/data/com.termux/files/usr/include/fcntl.h" 2 3 4

# 1 "/data/data/com.termux/files/usr/include/bits/fcntl.h" 1 3 4
# 36 "/data/data/com.termux/files/usr/include/bits/fcntl.h" 3 4
int fcntl(int __fd, int __cmd, ...);
# 41 "/data/data/com.termux/files/usr/include/fcntl.h" 2 3 4
# 72 "/data/data/com.termux/files/usr/include/fcntl.h" 3 4
int creat(const char* __path, mode_t __mode);


int creat64(const char* __path, mode_t __mode) __attribute__((annotate("introduced_in=" "21")));


int openat(int __dir_fd, const char* __path, int __flags, ...) ;


int openat64(int __dir_fd, const char* __path, int __flags, ...) __attribute__((annotate("introduced_in=" "21")));


int open(const char* __path, int __flags, ...) ;


int open64(const char* __path, int __flags, ...) __attribute__((annotate("introduced_in=" "21")));
ssize_t splice(int __in_fd, off64_t* __in_offset, int __out_fd, off64_t* __out_offset, size_t __length, unsigned int __flags) __attribute__((annotate("introduced_in=" "21")));
ssize_t tee(int __in_fd, int __out_fd, size_t __length, unsigned int __flags) __attribute__((annotate("introduced_in=" "21")));
ssize_t vmsplice(int __fd, const struct iovec* __iov, size_t __count, unsigned int __flags) __attribute__((annotate("introduced_in=" "21")));

int fallocate(int __fd, int __mode, off_t __offset, off_t __length) __attribute__((annotate("introduced_in=" "21")));
int fallocate64(int __fd, int __mode, off64_t __offset, off64_t __length) __attribute__((annotate("introduced_in=" "21")));
int posix_fadvise(int __fd, off_t __offset, off_t __length, int __advice) __attribute__((annotate("introduced_in=" "21")));
int posix_fadvise64(int __fd, off64_t __offset, off64_t __length, int __advice) __attribute__((annotate("introduced_in=" "21")));
int posix_fallocate(int __fd, off_t __offset, off_t __length) __attribute__((annotate("introduced_in=" "21")));
int posix_fallocate64(int __fd, off64_t __offset, off64_t __length) __attribute__((annotate("introduced_in=" "21")));
# 88 "./h-system.h" 2



# 1 "/data/data/com.termux/files/usr/include/pwd.h" 1 3 4
# 68 "/data/data/com.termux/files/usr/include/pwd.h" 3 4
struct passwd {
  char* pw_name;
  char* pw_passwd;
  uid_t pw_uid;
  gid_t pw_gid;






  char* pw_dir;
  char* pw_shell;
};

struct passwd* getpwnam(const char* __name);
struct passwd* getpwuid(uid_t __uid);
# 97 "/data/data/com.termux/files/usr/include/pwd.h" 3 4
int getpwnam_r(const char* __name, struct passwd* __pwd, char* __buf, size_t __n, struct passwd** __result) __attribute__((annotate("introduced_in=" "12")));
int getpwuid_r(uid_t __uid, struct passwd* __pwd, char* __buf, size_t __n, struct passwd** __result) __attribute__((annotate("introduced_in=" "12")));


int access(const char* __path, int __mode);

static void android_setup_pwd(struct passwd* pw) {
 char const* result = "/data/data/com.termux/files/usr/bin/login";
 if (result == ((void*)0) || access(result, 1) == -1) {
  pw->pw_shell = "/data/data/com.termux/files/usr/bin/bash";
 } else {
  pw->pw_shell = (char*) result;
 }
 pw->pw_dir = "/data/data/com.termux/files/home";
 pw->pw_passwd = "*";



}

static struct passwd* android_polyfill_getpwuid(uid_t t) {
       struct passwd* pw = getpwuid(t);
       if (pw == ((void*)0)) return ((void*)0);
       android_setup_pwd(pw);
       return pw;
}

static struct passwd* android_polyfill_getpwnam(const char* name) {
       struct passwd* pw = getpwnam(name);
       if (pw == ((void*)0)) return ((void*)0);
       android_setup_pwd(pw);
       return pw;
}

static int android_polyfill_getpwuid_r(uid_t uid,
                                       struct passwd *pwd,
                                       char *buffer,
                                       size_t bufsize,
                                       struct passwd **result) {
       int ret = getpwuid_r(uid, pwd, buffer, bufsize, result);
       if (ret != 0) return ret;
       android_setup_pwd(pwd);
       return 0;
}




static void endpwent(void) { }
# 92 "./h-system.h" 2





# 1 "/data/data/com.termux/files/usr/include/sys/param.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/sys/param.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/linux/param.h" 1 3 4
# 21 "/data/data/com.termux/files/usr/include/linux/param.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm/param.h" 1 3 4
# 19 "/data/data/com.termux/files/usr/include/asm/param.h" 3 4
# 1 "/data/data/com.termux/files/usr/include/asm-generic/param.h" 1 3 4
# 20 "/data/data/com.termux/files/usr/include/asm/param.h" 2 3 4
# 22 "/data/data/com.termux/files/usr/include/linux/param.h" 2 3 4
# 34 "/data/data/com.termux/files/usr/include/sys/param.h" 2 3 4
# 98 "./h-system.h" 2
# 1 "/data/data/com.termux/files/usr/include/sys/file.h" 1 3 4
# 39 "/data/data/com.termux/files/usr/include/sys/file.h" 3 4
int flock(int __fd, int __op);
# 99 "./h-system.h" 2






# 1 "/data/data/com.termux/files/usr/include/unistd.h" 1 3 4
# 32 "/data/data/com.termux/files/usr/include/unistd.h" 3 4
# 1 "/data/data/com.termux/files/usr/lib/clang/5.0.1/include/stddef.h" 1 3 4
# 33 "/data/data/com.termux/files/usr/include/unistd.h" 2 3 4





# 1 "/data/data/com.termux/files/usr/include/bits/getopt.h" 1 3 4
# 36 "/data/data/com.termux/files/usr/include/bits/getopt.h" 3 4
int getopt(int __argc, char* const __argv[], const char* __options);

extern char* optarg;
extern int optind, opterr, optopt;
# 39 "/data/data/com.termux/files/usr/include/unistd.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/bits/ioctl.h" 1 3 4
# 36 "/data/data/com.termux/files/usr/include/bits/ioctl.h" 3 4
int ioctl(int __fd, int __request, ...);
# 40 "/data/data/com.termux/files/usr/include/unistd.h" 2 3 4
# 1 "/data/data/com.termux/files/usr/include/bits/lockf.h" 1 3 4
# 41 "/data/data/com.termux/files/usr/include/unistd.h" 2 3 4


# 1 "/data/data/com.termux/files/usr/include/bits/sysconf.h" 1 3 4
# 192 "/data/data/com.termux/files/usr/include/bits/sysconf.h" 3 4
long sysconf(int __name);
# 44 "/data/data/com.termux/files/usr/include/unistd.h" 2 3 4
# 77 "/data/data/com.termux/files/usr/include/unistd.h" 3 4
extern char** environ;

__attribute__((__noreturn__)) void _exit(int __status);

pid_t fork(void);
pid_t vfork(void);
pid_t getpid(void);
pid_t gettid(void) __attribute__((__const__));
pid_t getpgid(pid_t __pid);
int setpgid(pid_t __pid, pid_t __pgid);
pid_t getppid(void);
pid_t getpgrp(void);
int setpgrp(void);


pid_t getsid(pid_t __pid) __attribute__((annotate("introduced_in=" "17")));


pid_t setsid(void);

int execv(const char* __path, char* const* __argv);
int execvp(const char* __file, char* const* __argv);


int execvpe(const char* __file, char* const* __argv, char* const* __envp) __attribute__((annotate("introduced_in=" "21")));


int execve(const char* __file, char* const* __argv, char* const* __envp);
int execl(const char* __path, const char* __arg0, ...) __attribute__((__sentinel__));
int execlp(const char* __file, const char* __arg0, ...) __attribute__((__sentinel__));
int execle(const char* __path, const char* __arg0, ... )
    __attribute__((__sentinel__(1)));






int nice(int __incr);

int setuid(uid_t __uid);
uid_t getuid(void);
int seteuid(uid_t __uid);
uid_t geteuid(void);
int setgid(gid_t __gid);
gid_t getgid(void);
int setegid(gid_t __gid);
gid_t getegid(void);
int getgroups(int __size, gid_t* __list);
int setgroups(size_t __size, const gid_t* __list);
int setreuid(uid_t __ruid, uid_t __euid);
int setregid(gid_t __rgid, gid_t __egid);
int setresuid(uid_t __ruid, uid_t __euid, uid_t __suid);
int setresgid(gid_t __rgid, gid_t __egid, gid_t __sgid);
int getresuid(uid_t* __ruid, uid_t* __euid, uid_t* __suid);
int getresgid(gid_t* __rgid, gid_t* __egid, gid_t* __sgid);
char* getlogin(void);






long fpathconf(int __fd, int __name);
long pathconf(const char* __path, int __name);

int access(const char* __path, int __mode);


int faccessat(int __dirfd, const char* __path, int __mode, int __flags) __attribute__((annotate("introduced_in=" "16")));


int link(const char* __old_path, const char* __new_path);


int linkat(int __old_dir_fd, const char* __old_path, int __new_dir_fd, const char* __new_path, int __flags) __attribute__((annotate("introduced_in=" "21")));


int unlink(const char* __path);
int unlinkat(int __dirfd, const char* __path, int __flags);
int chdir(const char* __path);
int fchdir(int __fd);
int rmdir(const char* __path);
int pipe(int __fds[2]);



int chroot(const char* __path);
int symlink(const char* __old_path, const char* __new_path);


int symlinkat(const char* __old_path, int __new_dir_fd, const char* __new_path) __attribute__((annotate("introduced_in=" "21")));


ssize_t readlink(const char* __path, char* __buf, size_t __buf_size)
                                           ;


ssize_t readlinkat(int __dir_fd, const char* __path, char* __buf, size_t __buf_size)
    __attribute__((annotate("introduced_in=" "21"))) ;


int chown(const char* __path, uid_t __owner, gid_t __group);
int fchown(int __fd, uid_t __owner, gid_t __group);
int fchownat(int __dir_fd, const char* __path, uid_t __owner, gid_t __group, int __flags);
int lchown(const char* __path, uid_t __owner, gid_t __group);
char* getcwd(char* __buf, size_t __size) ;

void sync(void);
# 194 "/data/data/com.termux/files/usr/include/unistd.h" 3 4
int close(int __fd);

ssize_t read(int __fd, void* __buf, size_t __count)
                        ;
ssize_t write(int __fd, const void* __buf, size_t __count)
                         ;

int dup(int __old_fd);
int dup2(int __old_fd, int __new_fd);


int dup3(int __old_fd, int __new_fd, int __flags) __attribute__((annotate("introduced_in=" "21")));


int fsync(int __fd);
int fdatasync(int __fd) __attribute__((annotate("introduced_in=" "9")));




off_t lseek(int __fd, off_t __offset, int __whence);


off64_t lseek64(int __fd, off64_t __offset, int __whence);
# 235 "/data/data/com.termux/files/usr/include/unistd.h" 3 4
int truncate(const char* __path, off_t __length);
ssize_t pread(int __fd, void* __buf, size_t __count, off_t __offset)
                                        ;
ssize_t pwrite(int __fd, const void* __buf, size_t __count, off_t __offset)
                                         ;
int ftruncate(int __fd, off_t __length);




int truncate64(const char* __path, off64_t __length) __attribute__((annotate("introduced_in=" "21")));




ssize_t pread64(int __fd, void* __buf, size_t __count, off64_t __offset)
    __attribute__((annotate("introduced_in=" "12"))) ;
ssize_t pwrite64(int __fd, const void* __buf, size_t __count, off64_t __offset)
    __attribute__((annotate("introduced_in=" "12"))) ;
int ftruncate64(int __fd, off64_t __length) __attribute__((annotate("introduced_in=" "12")));



int pause(void);
unsigned int alarm(unsigned int __seconds);
unsigned int sleep(unsigned int __seconds);
int usleep(useconds_t __microseconds);

int gethostname(char* __buf, size_t __buf_size);






int brk(void* __addr);
void* sbrk(ptrdiff_t __increment);

int isatty(int __fd);
char* ttyname(int __fd);
int ttyname_r(int __fd, char* __buf, size_t __buf_size) __attribute__((annotate("introduced_in=" "8")));

int acct(const char* __path);


int getpagesize(void) __attribute__((annotate("introduced_in=" "21")));






long syscall(long __number, ...);

int daemon(int __no_chdir, int __no_close);






pid_t tcgetpgrp(int __fd);
int tcsetpgrp(int __fd, pid_t __pid);
# 106 "./h-system.h" 2

# 1 "/data/data/com.termux/files/usr/include/sys/stat.h" 1 3 4
# 117 "/data/data/com.termux/files/usr/include/sys/stat.h" 3 4
struct stat { unsigned long long st_dev; unsigned char __pad0[4]; unsigned long __st_ino; unsigned int st_mode; nlink_t st_nlink; uid_t st_uid; gid_t st_gid; unsigned long long st_rdev; unsigned char __pad3[4]; long long st_size; unsigned long st_blksize; unsigned long long st_blocks; struct timespec st_atim; struct timespec st_mtim; struct timespec st_ctim; unsigned long long st_ino; };
struct stat64 { unsigned long long st_dev; unsigned char __pad0[4]; unsigned long __st_ino; unsigned int st_mode; nlink_t st_nlink; uid_t st_uid; gid_t st_gid; unsigned long long st_rdev; unsigned char __pad3[4]; long long st_size; unsigned long st_blksize; unsigned long long st_blocks; struct timespec st_atim; struct timespec st_mtim; struct timespec st_ctim; unsigned long long st_ino; };
# 154 "/data/data/com.termux/files/usr/include/sys/stat.h" 3 4
int chmod(const char* __path, mode_t __mode);
int fchmod(int __fd, mode_t __mode);
int mkdir(const char* __path, mode_t __mode);

int fstat(int __fd, struct stat* __buf);


int fstat64(int __fd, struct stat64* __buf) __attribute__((annotate("introduced_in=" "21")));


int fstatat(int __dir_fd, const char* __path, struct stat* __buf, int __flags);


int fstatat64(int __dir_fd, const char* __path, struct stat64* __buf, int __flags) __attribute__((annotate("introduced_in=" "21")));


int lstat(const char* __path, struct stat* __buf);


int lstat64(const char* __path, struct stat64* __buf) __attribute__((annotate("introduced_in=" "21")));


int stat(const char* __path, struct stat* __buf);


int stat64(const char* __path, struct stat64* __buf) __attribute__((annotate("introduced_in=" "21")));



int mknod(const char* __path, mode_t __mode, dev_t __dev);
mode_t umask(mode_t __mask) ;






int mkfifo(const char* __path, mode_t __mode) __attribute__((annotate("introduced_in=" "21")));
# 202 "/data/data/com.termux/files/usr/include/sys/stat.h" 3 4
int fchmodat(int __dir_fd, const char* __path, mode_t __mode, int __flags);
int mkdirat(int __dir_fd, const char* __path, mode_t __mode);


int mknodat(int __dir_fd, const char* __path, mode_t __mode, dev_t __dev) __attribute__((annotate("introduced_in=" "21")));







int utimensat(int __dir_fd, const char* __path, const struct timespec __times[2], int __flags)
  __attribute__((annotate("introduced_in=" "12")));




int futimens(int __dir_fd, const struct timespec __times[2]) __attribute__((annotate("introduced_in=" "19")));






# 1 "/data/data/com.termux/files/usr/include/android/legacy_sys_stat_inlines.h" 1 3 4
# 227 "/data/data/com.termux/files/usr/include/sys/stat.h" 2 3 4
# 108 "./h-system.h" 2
# 35 "./h-basic.h" 2


# 1 "./h-type.h" 1
# 65 "./h-type.h"
typedef void *vptr;


typedef const char *cptr;



typedef double real;




typedef int errr;
# 112 "./h-type.h"
typedef unsigned char byte_hack;



typedef char bool_hack;



typedef int sint;


typedef unsigned int uint_hack;






typedef unsigned long huge_hack;



typedef signed short s16b;
typedef unsigned short u16b;






typedef signed long s32b;
typedef unsigned long u32b;







typedef real *real_ptr;
typedef errr *errr_ptr;
typedef char *char_ptr;
typedef byte_hack *byte_ptr;
typedef bool_hack *bool_ptr;
typedef sint *sint_ptr;
typedef uint_hack *uint_ptr;
typedef long *long_ptr;
typedef huge_hack *huge_ptr;
typedef s16b *s16b_ptr;
typedef u16b *u16b_ptr;
typedef s32b *s32b_ptr;
typedef u32b *u32b_ptr;
typedef vptr *vptr_ptr;
typedef cptr *cptr_ptr;





typedef void (*func_void)();
typedef errr (*func_errr)();
typedef char (*func_char)();
typedef byte_hack (*func_byte)();
typedef bool_hack (*func_bool)();
typedef sint (*func_sint)();
typedef uint_hack (*func_uint)();
typedef real (*func_real)();
typedef vptr (*func_vptr)();
typedef cptr (*func_cptr)();






typedef errr (*func_gen)(vptr, vptr);


typedef bool_hack (*func_eql)(vptr, vptr);


typedef sint (*func_cmp)(vptr, vptr);


typedef uint_hack (*func_hsh)(vptr, uint_hack);


typedef vptr (*func_key)(vptr);
# 38 "./h-basic.h" 2


# 1 "./h-define.h" 1
# 41 "./h-basic.h" 2
# 30 "./angband.h" 2





# 1 "./z-util.h" 1
# 36 "./z-util.h"
extern cptr argv0;



extern void (*plog_aux)(cptr);
extern void (*quit_aux)(cptr);
extern void (*core_aux)(cptr);





extern int my_stricmp(const char *s1, const char *s2);
extern int my_strnicmp(cptr a, cptr b, int n);


extern size_t my_strcpy(char *buf, const char *src, size_t bufsize);


extern size_t my_strcat(char *buf, const char *src, size_t bufsize);


extern size_t my_commacat(char *buf, const char *src, size_t bufsize);


extern bool_hack streq(cptr s, cptr t);
extern bool_hack prefix(cptr s, cptr t);
extern bool_hack suffix(cptr s, cptr t);



extern void plog(cptr str);


extern void quit(cptr str);


extern void core(cptr str);
# 36 "./angband.h" 2
# 1 "./z-virt.h" 1
# 143 "./z-virt.h"
extern void* (*rnfree_aux)(void*);


extern void* (*rpanic_aux)(size_t);


extern void* (*ralloc_aux)(size_t);





extern void* rnfree(void *p);


extern void* rpanic(size_t len);


extern void* ralloc(size_t len);


extern cptr string_make(cptr str);


extern errr string_free(cptr str);
# 37 "./angband.h" 2
# 1 "./z-form.h" 1
# 40 "./z-form.h"
extern size_t vstrnfmt(char *buf, size_t max, cptr fmt, va_list vp);


extern size_t strnfmt(char *buf, size_t max, cptr fmt, ...);


extern char *vformat(cptr fmt, va_list vp);


extern void vformat_kill(void);


extern void strnfcat(char *str, size_t max, size_t *end, cptr fmt, ...);


extern char *format(cptr fmt, ...);


extern void plog_fmt(cptr fmt, ...);


extern void quit_fmt(cptr fmt, ...);


extern void core_fmt(cptr fmt, ...);
# 38 "./angband.h" 2
# 1 "./z-rand.h" 1
# 96 "./z-rand.h"
extern bool_hack rand_unbiased;
extern bool_hack Rand_quick;
extern u32b Rand_value;
extern u16b Rand_place;
extern u32b Rand_state[63];





extern void Rand_state_init(u32b seed);
extern u32b Rand_div(u32b m);
extern u32b Rand_num(u32b m);
extern s16b Rand_normal(int mean, int stand);
extern u32b Rand_simple(u32b m);
extern s16b damroll(int num, int sides);
extern s16b maxroll(int num, int sides);
# 39 "./angband.h" 2
# 1 "./z-term.h" 1
# 25 "./z-term.h"
extern const char seven_bit_translation[128];
# 43 "./z-term.h"
typedef struct term_win term_win;

struct term_win
{
 bool_hack cu, cv;
 byte_hack cx, cy;

 byte_hack **a;
 char **c;

 byte_hack *va;
 char *vc;

 byte_hack **ta;
 char **tc;

 byte_hack *vta;
 char *vtc;
};
# 165 "./z-term.h"
typedef struct term term;

struct term
{
 void *user;

 void *data;

 bool_hack user_flag;

 bool_hack data_flag;

 bool_hack active_flag;
 bool_hack mapped_flag;
 bool_hack total_erase;
 bool_hack fixed_shape;
 bool_hack icky_corner;
 bool_hack soft_cursor;
 bool_hack always_pict;
 bool_hack higher_pict;
 bool_hack always_text;
 bool_hack unused_flag;
 bool_hack never_bored;
 bool_hack never_frosh;

 byte_hack attr_blank;
 char char_blank;

 char *key_queue;

 u16b key_head;
 u16b key_tail;
 u16b key_xtra;
 u16b key_size;

 byte_hack wid;
 byte_hack hgt;

 byte_hack y1;
 byte_hack y2;

 byte_hack *x1;
 byte_hack *x2;


 byte_hack offset_x;
 byte_hack offset_y;

 term_win *old;
 term_win *scr;

 term_win *tmp;
 term_win *mem;

 void (*init_hook)(term *t);
 void (*nuke_hook)(term *t);

 errr (*user_hook)(int n);

 errr (*xtra_hook)(int n, int v);

 errr (*curs_hook)(int x, int y);

 errr (*bigcurs_hook)(int x, int y);

 errr (*wipe_hook)(int x, int y, int n);

 errr (*text_hook)(int x, int y, int n, byte_hack a, cptr s);

 errr (*pict_hook)(int x, int y, int n, const byte_hack *ap, const char *cp, const byte_hack *tap, const char *tcp);

  byte_hack (*xchar_hook)(byte_hack c);
};
# 282 "./z-term.h"
extern term *Term;




extern errr Term_user(int n);
extern errr Term_xtra(int n, int v);

extern void Term_queue_char(int x, int y, byte_hack a, char c, byte_hack ta, char tc);
extern void Term_queue_chars(int x, int y, int n, byte_hack a, cptr s);

extern errr Term_fresh(void);
extern errr Term_set_cursor(bool_hack v);
extern errr Term_gotoxy(int x, int y);
extern errr Term_draw(int x, int y, byte_hack a, char c);
extern errr Term_addch(byte_hack a, char c);
extern errr Term_addstr(int n, byte_hack a, cptr s);
extern errr Term_putch(int x, int y, byte_hack a, char c);
extern errr Term_putstr(int x, int y, int n, byte_hack a, cptr s);
extern errr Term_erase(int x, int y, int n);
extern errr Term_clear(void);
extern errr Term_redraw(void);
extern errr Term_redraw_section(int x1, int y1, int x2, int y2);

extern errr Term_get_cursor(bool_hack *v);
extern errr Term_get_size(int *w, int *h);
extern errr Term_locate(int *x, int *y);
extern errr Term_what(int x, int y, byte_hack *a, char *c);

extern errr Term_flush(void);
extern errr Term_keypress(int k);
extern errr Term_key_push(int k);
extern errr Term_inkey(char *ch, bool_hack wait, bool_hack take);

extern errr Term_save(void);
extern errr Term_load(void);

extern errr Term_exchange(void);

extern errr Term_resize(int w, int h);

extern errr Term_activate(term *t);

extern errr term_nuke(term *t);
extern errr term_init(term *t, int w, int h, int k);
# 40 "./angband.h" 2





# 1 "./config.h" 1
# 46 "./angband.h" 2





# 1 "./defines.h" 1
# 52 "./angband.h" 2
# 1 "./types.h" 1
# 89 "./types.h"
typedef struct header header;

struct header
{
 byte_hack v_major;
 byte_hack v_minor;
 byte_hack v_patch;
 byte_hack v_extra;


 u16b info_num;

 u16b info_len;


 u16b head_size;

 u32b info_size;

 u16b name_size;

 u32b text_size;
};







typedef struct feature_type feature_type;

struct feature_type
{
 u16b name;
 u16b text;

 byte_hack mimic;

 byte_hack extra;

 s16b unused;

 byte_hack f_attr;
 char f_char;

 byte_hack z_attr;
 char z_char;
};
# 146 "./types.h"
typedef struct object_kind object_kind;

struct object_kind
{
 u16b name;
 u32b text;

 byte_hack tval;
 byte_hack sval;

 s16b pval;

 s16b to_h;
 s16b to_d;
 s16b to_a;

 s16b ac;

 byte_hack dd, ds;

 s16b weight;

 s32b cost;

 u32b flags1;
 u32b flags2;
 u32b flags3;

 byte_hack locale[4];
 byte_hack chance[4];

 byte_hack level;
 byte_hack extra;


 byte_hack k_attr;
 char k_char;


 byte_hack d_attr;
 char d_char;


 byte_hack x_attr;
 char x_char;


 bool_hack has_flavor;

 bool_hack easy_know;


 bool_hack aware;

 bool_hack tried;

 byte_hack squelch;
};
# 215 "./types.h"
typedef struct artefact_type artefact_type;

struct artefact_type
{
 u16b name;
 u16b text;

 byte_hack tval;
 byte_hack sval;

 s16b pval;

 s16b to_h;
 s16b to_d;
 s16b to_a;

 s16b ac;

 byte_hack dd, ds;

 s16b weight;

 s32b cost;

 u32b flags1;
 u32b flags2;
 u32b flags3;

 byte_hack level;
 byte_hack rarity;

 byte_hack cur_num;
 byte_hack max_num;
};






typedef struct ego_item_type ego_item_type;

struct ego_item_type
{
 u16b name;
 u16b text;

 byte_hack slot;
 byte_hack rating;

 byte_hack level;
 byte_hack rarity;

 byte_hack max_to_h;
 byte_hack max_to_d;
 byte_hack max_to_a;

 byte_hack max_pval;

 s32b cost;

 u32b flags1;
 u32b flags2;
 u32b flags3;
};
# 293 "./types.h"
typedef struct monster_blow monster_blow;

struct monster_blow
{
 byte_hack method;
 byte_hack effect;
 byte_hack d_dice;
 byte_hack d_side;
};
# 326 "./types.h"
typedef struct monster_race monster_race;

struct monster_race
{
 u32b name;
 u32b text;
 byte_hack custom;

 byte_hack hdice;
 byte_hack hside;

 s16b ac;

 s16b sleep;
 byte_hack aaf;
 byte_hack speed;

 s32b mexp;

 s16b extra;

 byte_hack freq_inate;
 byte_hack freq_spell;

 u32b flags1;
 u32b flags2;
 u32b flags3;
 u32b flags4;
 u32b flags5;
 u32b flags6;
 u32b flags7;

 monster_blow blow[4];

 byte_hack level;
 byte_hack rarity;

 byte_hack d_attr;
 char d_char;

 byte_hack x_attr;
 char x_char;

 byte_hack max_num;

 byte_hack cur_num;

 s16b r_sights;
 s16b r_deaths;

 s16b r_pkills;
 s16b r_tkills;

 byte_hack r_wake;
 byte_hack r_ignore;

 byte_hack r_xtra1;
 byte_hack r_xtra2;

 byte_hack r_drop_gold;
 byte_hack r_drop_item;

 byte_hack r_cast_inate;
 byte_hack r_cast_spell;

 byte_hack num_blows;
 byte_hack r_blows[4];

 u32b r_flags1;
 u32b r_flags2;
 u32b r_flags3;
 u32b r_flags4;
 u32b r_flags5;
 u32b r_flags6;
 u32b r_flags7;

 int r_escort;
};





typedef struct vault_type vault_type;

struct vault_type
{
 u32b name;
 u32b text;

 byte_hack typ;

 byte_hack rat;

 byte_hack hgt;
 byte_hack wid;
};
# 454 "./types.h"
typedef struct cave_type cave_type;

struct cave_type
{
 byte_hack info;

 byte_hack feat;

 s16b o_idx;

 s16b m_idx;



 byte_hack cost;
 byte_hack when;



};
# 503 "./types.h"
typedef struct object_type object_type;

struct object_type
{
 s16b k_idx;

 byte_hack iy;
 byte_hack ix;

 byte_hack tval;
 byte_hack sval;

 s16b pval;

 byte_hack discount;

 byte_hack number;

 s16b weight;

 byte_hack elevel;
 s32b exp;

 byte_hack name1;
 byte_hack name2;

 byte_hack xtra1;
 byte_hack xtra2;

 s16b to_h;
 s16b to_d;
 s16b to_a;

 s16b ac;

 byte_hack dd, ds;

 s16b timeout;

 byte_hack ident;

 byte_hack handed;

 byte_hack marked;

 u16b note;
 u16b art_name;

 u32b art_flags1;
 u32b art_flags2;
 u32b art_flags3;


 s16b next_o_idx;

 s16b held_m_idx;

 bool_hack squelch;
};
# 574 "./types.h"
typedef struct monster_type monster_type;

struct monster_type
{
 s16b r_idx;

 byte_hack fy;
 byte_hack fx;

 byte_hack generation;

 s16b hp;
 s16b maxhp;

 s16b csleep;

 byte_hack mspeed;
 s16b energy;

 byte_hack stunned;
 byte_hack confused;
 byte_hack monfear;

 byte_hack cdis;

 byte_hack mflag;

 s16b gold;

 bool_hack ml;

 s16b hold_o_idx;
# 620 "./types.h"
 u32b smart;



 byte_hack ally;
};
# 638 "./types.h"
typedef struct alloc_entry alloc_entry;

struct alloc_entry
{
 s16b index;

 byte_hack level;
 byte_hack prob1;
 byte_hack prob2;
 byte_hack prob3;

 u16b total;
};
# 670 "./types.h"
typedef struct option_type option_type;

struct option_type
{
 bool_hack *o_var;

 byte_hack o_norm;

 byte_hack o_page;

 byte_hack o_set;
 byte_hack o_bit;

 cptr o_text;
 cptr o_desc;
};

typedef struct reward_type reward_type;

struct reward_type
{
 int nasty;
    int (*func)();
 cptr description;
};

typedef struct patron_type patron_type;

struct patron_type
{
 byte_hack type;
 cptr short_name;
 int stat;
 int races_liked;
 int classes_liked;
 cptr monsters;
 cptr monsters_filler;
 cptr weapon_f1_liked;
 cptr armor_f1_liked;
 cptr weapon_f2_liked;
 cptr armor_f2_liked;
 cptr weapon_f3_liked;
 cptr armor_f3_liked;
 cptr weapon_f4_liked;
 cptr armor_f4_liked;
 int tval_like;
 int tval_hate;
 int vault_like;
 int gifts;
 int steals;
 cptr long_name;
};






typedef struct quest quest;

struct quest
{
 unsigned int level;
 int r_idx;

 int cur_num;
 int max_num;
};
# 746 "./types.h"
typedef struct owner_type owner_type;

struct owner_type
{
 cptr owner_name;

 s16b max_cost;

 byte_hack max_inflate;
 byte_hack min_inflate;

 byte_hack haggle_per;

 byte_hack insult_max;

 byte_hack owner_race;
};
# 772 "./types.h"
typedef struct store_type store_type;
struct store_type
{
 byte_hack x;
 byte_hack y;

 byte_hack bought;
 byte_hack owner;
 byte_hack extra;

 s16b insult_cur;

 s16b good_buy;
 s16b bad_buy;

 s32b store_open;

 s32b store_wrap;

 s16b table_num;
 s16b table_size;
 s16b *table;

 s16b stock_num;
 s16b stock_size;
 object_type *stock;
};






typedef struct bookswap_deal bookswap_deal;
struct bookswap_deal
{
 byte_hack race;
 byte_hack pclass;
 char player_name[32];

 bool_hack active;

 s16b wants_tval1;
 s16b wants_tval2;
 s16b wants_tval3;

 byte_hack wants_sval1;
 byte_hack wants_sval2;
 byte_hack wants_sval3;

 s16b offers_tval1;
 s16b offers_tval2;
 s16b offers_tval3;

 byte_hack offers_sval1;
 byte_hack offers_sval2;
 byte_hack offers_sval3;
};

typedef struct tv_describer_type tv_describer_type;
struct tv_describer_type
{
 s16b tval;
 bool_hack easy_know;
 byte_hack attribute;
 byte_hack action;
 cptr *adj;
 cptr plain;
 cptr full;
};




typedef struct realm_type realm_type;
struct realm_type
{
 s16b tval;
 cptr name;
 cptr basename1;
 cptr basename2;
};




typedef struct spell_type spell_type;
struct spell_type
{
 byte_hack slevel;
 byte_hack smana;
 byte_hack sfail;
 byte_hack sexp;
 cptr name;
 cptr macro;
 cptr spoiler;
};


typedef struct magic_type magic_type;
struct magic_type
{
 byte_hack slevel;
 byte_hack smana;
 byte_hack sfail;
 byte_hack sexp;
 cptr name;
 cptr macro;
 cptr spoiler;
 char *info;
 byte_hack attr_info;
 byte_hack attr_realm;
 bool_hack forgotten;
 bool_hack learned;
 bool_hack worked;
};






typedef struct alchemy_info alchemy_info;

struct alchemy_info
{
 byte_hack sval1;
 bool_hack known1;
 byte_hack sval2;
 bool_hack known2;
};







typedef struct class_magic class_magic;

struct class_magic
{
 s16b spell_book;
 s16b spell_xtra;

 s16b spell_stat;
 s16b spell_type;

 s16b spell_first;
 s16b spell_weight;

 byte_hack skill[9];
};





typedef struct player_sex player_sex;

struct player_sex
{
 cptr title;

 cptr address;

 cptr winner;
};






typedef struct player_race player_race;

struct player_race
{
 cptr title;

 s16b r_adj[6];

 s16b r_dis;
 s16b r_dev;
 s16b r_sav;
 s16b r_stl;
 s16b r_srh;
 s16b r_fos;
 s16b r_thn;
 s16b r_thb;

 byte_hack r_mhp;
 byte_hack r_exp;

 byte_hack b_age;
 byte_hack m_age;

 byte_hack m_b_ht;
 byte_hack m_m_ht;
 byte_hack m_b_wt;
 byte_hack m_m_wt;

 byte_hack f_b_ht;
 byte_hack f_m_ht;
 byte_hack f_b_wt;
 byte_hack f_m_wt;

 byte_hack infra;

 u16b choice;

 bool_hack rations;

 bool_hack undead;

 bool_hack fearless;

 bool_hack hates_light;

};




typedef struct birth_item birth_item;
struct birth_item
{
 byte_hack prace;
 byte_hack pclass;
 bool_hack *flag;
 byte_hack tval;
 byte_hack sval;
 byte_hack action;
 byte_hack minimum;
 byte_hack maximum;
};





typedef struct player_class player_class;

struct player_class
{
 cptr title;

 s16b c_adj[6];

 s16b c_dis;
 s16b c_dev;
 s16b c_sav;
 s16b c_stl;
 s16b c_srh;
 s16b c_fos;
 s16b c_thn;
 s16b c_thb;

 s16b x_dis;
 s16b x_dev;
 s16b x_sav;
 s16b x_stl;
 s16b x_srh;
 s16b x_fos;
 s16b x_thn;
 s16b x_thb;

 s16b c_mhp;
 s16b c_exp;
};
# 1061 "./types.h"
typedef struct player_type player_type;

struct player_type
{
 byte_hack psex;
 byte_hack prace;
 byte_hack psign;
 byte_hack pclass;
 u16b realm1;
 u16b realm2;
 byte_hack oops;

 byte_hack hitdie;
 u16b expfact;



 byte_hack ritual;

 s16b age;
 s16b ht;
 s16b wt;
 s16b sc;
 s16b birthday;
 s16b startdate;

 s32b au;

 s32b max_exp;
 s32b exp;
 u16b exp_frac;

 s16b lev;

 s16b mhp;
 s16b chp;
 u16b chp_frac;

 s16b msp;
 s16b csp;
 u16b csp_frac;

 s16b max_plv;
 s16b max_dun_level;
 u32b visits;

 s16b stat_max[6];
 s16b stat_cur[6];

 s16b fast;
 s16b slow;
 s16b blind;
 s16b paralyzed;
 s16b confused;
 s16b afraid;
 s16b image;
 s16b poisoned;
 s16b cut;
 s16b stun;

 s16b protevil;
 s16b invuln;
 s16b hero;
 s16b shero;
 s16b shield;
 s16b blessed;
 s16b tim_invis;
 s16b tim_infra;
 s16b magic_shell;

 s16b oppose_acid;
 s16b oppose_elec;
 s16b oppose_fire;
 s16b oppose_cold;
 s16b oppose_pois;
 s16b oppose_conf;
 s16b oppose_fear;
 s16b oppose_blind;

 s16b tim_esp;
 s16b wraith_form;

 s16b resist_magic;
 s16b tim_xtra1;
 s16b tim_xtra2;
 s16b tim_xtra3;
 s16b tim_xtra4;
 s16b tim_xtra5;
 s16b tim_xtra6;
 s16b tim_xtra7;
 s16b tim_xtra8;

 s16b evil_patron;
 u32b muta1;
 u32b muta2;
 u32b muta3;

 s16b word_recall;

 s16b energy;

 s16b food;

 byte_hack confusing;
 byte_hack searching;

 s16b new_spells;

 s16b old_spells;

 bool_hack old_cumber_armour;
 bool_hack old_cumber_glove;
 bool_hack old_heavy_wield;
 bool_hack old_heavy_shoot;
 bool_hack old_icky_wield;

 s16b old_lite;
 s16b old_view;

 s16b old_food_aux;


 bool_hack cumber_armour;
 bool_hack cumber_glove;
 bool_hack heavy_wield;
 bool_hack heavy_shoot;
 bool_hack icky_wield;

 s16b cur_lite;


 u32b notice;
 u32b update;
 u32b redraw;
 u32b window;

 s16b stat_use[6];
 s16b stat_top[6];

 s16b stat_add[6];
 s16b stat_ind[6];

 bool_hack immune_acid;
 bool_hack immune_elec;
 bool_hack immune_fire;
 bool_hack immune_cold;

 bool_hack resist_acid;
 bool_hack resist_elec;
 bool_hack resist_fire;
 bool_hack resist_cold;
 bool_hack resist_pois;

 bool_hack resist_conf;
 bool_hack resist_sound;
 bool_hack resist_lite;
 bool_hack resist_dark;
 bool_hack resist_chaos;
 bool_hack resist_disen;
 bool_hack resist_shard;
 bool_hack resist_nexus;
 bool_hack resist_blind;
 bool_hack resist_neth;
 bool_hack resist_fear;

 bool_hack reflect;
 bool_hack sh_fire;
 bool_hack sh_elec;

 bool_hack anti_magic;
 bool_hack anti_tele;

 bool_hack sustain_str;
 bool_hack sustain_int;
 bool_hack sustain_wis;
 bool_hack sustain_dex;
 bool_hack sustain_con;
 bool_hack sustain_cha;

 bool_hack aggravate;
 bool_hack teleport;

 bool_hack exp_drain;

 bool_hack ffall;
 bool_hack lite;
 bool_hack free_act;
 bool_hack see_inv;
 bool_hack regenerate;
 bool_hack hold_life;
 bool_hack telepathy;
 bool_hack slow_digest;
 bool_hack bless_blade;
 bool_hack xtra_might;
 bool_hack impact;

 s16b dis_to_h;
 s16b dis_to_d;
 s16b dis_to_a;

 s16b dis_ac;

 s16b to_h;
 s16b to_d;
 s16b to_a;

 s16b ac;

 s16b see_infra;

 s16b skill_dis;
 s16b skill_dev;
 s16b skill_sav;
 s16b skill_stl;
 s16b skill_srh;
 s16b skill_fos;
 s16b skill_thn;
 s16b skill_thb;
 s16b skill_tht;
 s16b skill_dig;

 s16b num_blow;
 s16b num_fire;

 byte_hack tval_xtra;

 byte_hack tval_ammo;

 s16b pspeed;

    s16b command_see;
 s16b command_wrk;
};




typedef struct martial_arts martial_arts;

struct martial_arts
{
 cptr desc;
 int min_level;
 int chance;
 int dd;
 int ds;
 int effect;
};





typedef struct mindcraft_power mindcraft_power;
struct mindcraft_power {
 int min_lev;
 int mana_cost;
 int fail;
 cptr name;
};

typedef struct U_power U_power;
struct U_power {
 int idx;
 cptr description;
 int level;
 int cost;
 int cost_level;
 int stat;
 cptr info;
 int power;
};


typedef struct corruption_type corruption_type;
struct corruption_type {
 byte_hack idx;
 u32b bitflag;
 cptr gain;
 byte_hack odds;
 cptr lose;
 cptr description;
};

typedef struct opposed_corruptions_type opposed_corruptions_type;
struct opposed_corruptions_type {
 byte_hack idx_gain;
 u32b bitflag_gain;
 byte_hack idx;
 u32b bitflag;
 cptr message;
};

typedef struct timed_type timed_type;
struct timed_type {
 byte_hack good;
 s16b *timer;
 cptr status;
 cptr gain;
 cptr lose;
 u32b redraw;
 u32b update;
};




typedef struct monster_list_entry monster_list_entry;
struct monster_list_entry
{
 s16b r_idx;
 byte_hack amount;
};




typedef struct item_list_entry item_list_entry;
struct item_list_entry
{
 s16b o_idx;
 s32b object_value;
 s16b count;
};


typedef struct menu_type menu_type;
struct menu_type
{
 cptr name;
 byte_hack cmd;
 bool_hack fin;
};


typedef struct realm_flag realm_flag;
struct realm_flag
{
 char name[30];
 byte_hack color;

 byte_hack price;

 u32b flags1;
 u32b flags2;
 u32b flags3;
};


typedef struct art_bias_entry art_bias_entry;
struct art_bias_entry
{
 byte_hack random_odds;
 byte_hack addbias_odds;
 byte_hack bias;
 byte_hack flag_odds;
 u32b flag1;
 u32b flag2;
 u32b flag3;
 int (*func)(object_type *o_ptr);
 byte_hack calculated_odds;
};
# 53 "./angband.h" 2
# 1 "./externs.h" 1
# 34 "./externs.h"
extern s16b ddd[9];
extern s16b ddx[10];
extern s16b ddy[10];
extern s16b ddx_ddd[9];
extern s16b ddy_ddd[9];
extern char hexsym[16];
extern byte_hack adj_stat[][21];
extern byte_hack blows_table[12][12];
extern owner_type owners[13][16];
extern u16b extract_energy[200];
extern s32b player_exp[50];
extern player_sex sex_info[2];
extern player_race race_info[28];
extern player_race sign_info[5];
extern U_power racial_powers[];
extern U_power sign_powers[];
extern U_power freak_powers[];
extern corruption_type corruptions[96];
extern opposed_corruptions_type opposed_corruptions[];
extern player_class class_info[16];
extern class_magic realms_info[16];
extern int spell_skill_mana[26][5];
extern byte_hack spell_skill_level[50][5];
extern u32b fake_spell_flags[4];
extern u16b realm_choices[16][2];
extern realm_type realm_names[];
extern spell_type spells[9][32];
extern byte_hack chest_traps[64];
extern cptr player_title[16][50/5];
extern cptr colour_names[16];
extern cptr stat_names[6];
extern cptr stat_names_reduced[6];
extern cptr stats_short[6];
extern cptr window_flag_desc[32];
extern option_type option_info[];
extern martial_arts ma_blows[17];
extern mindcraft_power mindcraft_powers[12];
extern timed_type timed[];
extern cptr squelch_strings[];
extern menu_type menu_info[10][10];
extern patron_type patrons[];
extern realm_flag realm_flags[12];


extern cptr copyright[5];
extern char syshelpfile[20];
extern char syshelpfile_birth[20];
extern byte_hack version_major;
extern byte_hack version_minor;
extern byte_hack version_patch;
extern byte_hack version_extra;
extern byte_hack sf_major;
extern byte_hack sf_minor;
extern byte_hack sf_patch;
extern byte_hack sf_extra;
extern u32b sf_xtra;
extern u32b sf_when;
extern u16b sf_lives;
extern u16b sf_saves;
extern bool_hack arg_fiddle;
extern bool_hack arg_sound;
extern bool_hack arg_graphics;
extern bool_hack arg_force_original;
extern bool_hack arg_force_roguelike;
extern bool_hack character_generated;
extern bool_hack character_dungeon;
extern bool_hack character_loaded;
extern bool_hack character_saved;
extern bool_hack character_icky;
extern bool_hack character_xtra;
extern u32b seed_flavor;
extern u32b seed_town;
extern s16b command_cmd;
extern s16b command_arg;
extern s16b command_rep;
extern s16b command_dir;
extern s16b command_see;
extern s16b command_gap;
extern s16b command_wrk;
extern s16b command_new;
extern s16b energy_use;
extern s16b choose_default;
extern bool_hack create_up_stair;
extern bool_hack create_down_stair;
extern bool_hack msg_flag;
extern bool_hack alive;
extern bool_hack death;
extern s16b running;
extern s16b resting;
extern s16b cur_hgt;
extern s16b cur_wid;
extern s16b dun_level;
extern byte_hack came_from;
extern s16b num_repro;
extern s16b object_level;
extern s16b monster_level;
extern s32b turn;
extern s32b old_turn;
extern bool_hack debug_mode;
extern bool_hack use_sound;
extern bool_hack use_graphics;
extern u16b total_winner;
extern u16b panic_save;
extern u16b noscore;
extern s16b signal_count;
extern bool_hack inkey_base;
extern bool_hack inkey_xtra;
extern bool_hack inkey_scan;
extern bool_hack inkey_flag;
extern s16b coin_type;
extern bool_hack opening_chest;
extern bool_hack shimmer_monsters;
extern bool_hack shimmer_objects;
extern bool_hack repair_monsters;
extern bool_hack repair_objects;
extern s16b total_weight;
extern s16b inven_nxt;
extern s16b inven_cnt;
extern s16b equip_cnt;
extern s16b o_max;
extern s16b o_cnt;
extern s16b m_max;
extern s16b m_cnt;
extern s16b hack_m_idx;
extern s16b hack_m_idx_ii;
extern int total_friends;
extern s32b total_friend_levels;
extern bool_hack multi_rew;
extern char summon_kin_type;
extern bool_hack hack_mind;
extern bool_hack hack_corruption;
extern bool_hack is_autosave;
extern int artefact_bias;
extern bool_hack rogue_like_commands;
extern bool_hack quick_messages;
extern bool_hack other_query_flag;
extern bool_hack carry_query_flag;
extern bool_hack always_pickup;
extern bool_hack always_repeat;
extern bool_hack use_old_target;
extern bool_hack depth_in_feet;
extern bool_hack use_colour;
extern bool_hack compress_savefile;
extern bool_hack hilite_player;
extern bool_hack ring_bell;
extern bool_hack find_ignore_stairs;
extern bool_hack find_ignore_doors;
extern bool_hack find_cut;
extern bool_hack find_examine;
extern bool_hack disturb_near;
extern bool_hack disturb_move;
extern bool_hack disturb_panel;
extern bool_hack disturb_state;
extern bool_hack disturb_minor;
extern bool_hack disturb_other;
extern bool_hack avoid_abort;
extern bool_hack avoid_other;
extern bool_hack flush_disturb;
extern bool_hack flush_failure;
extern bool_hack flush_command;
extern bool_hack fresh_before;
extern bool_hack fresh_after;
extern bool_hack fresh_message;
extern bool_hack alert_hitpoint;
extern bool_hack alert_failure;
extern bool_hack view_yellow_lite;
extern bool_hack view_bright_lite;
extern bool_hack view_granite_lite;
extern bool_hack view_special_lite;
extern bool_hack skip_corruptions;
extern bool_hack plain_descriptions;
extern bool_hack stupid_monsters;
extern bool_hack auto_destroy;
extern bool_hack wear_confirm;
extern bool_hack confirm_stairs;
extern bool_hack disturb_allies;
extern bool_hack maximise_mode;
extern bool_hack preserve_mode;
extern bool_hack use_autoroller;
extern bool_hack spend_points;
extern bool_hack ironman_shop;
extern bool_hack apply_k_storebought;
extern bool_hack apply_k_discover;
extern bool_hack sanity_store;
extern bool_hack sanity_speed;
extern bool_hack sanity_immune;
extern bool_hack sanity_telepathy;
extern bool_hack sanity_high_resist;
extern bool_hack sanity_stat;
extern bool_hack sanity_verbose;
extern bool_hack sanity_realm;
extern bool_hack sanity_price;
extern bool_hack sanity_id;
extern bool_hack reverse_xp;
extern s32b sane_price;
extern bool_hack use_bigtile;
extern byte_hack squelch_options[12];
extern bool_hack unify_commands;
extern bool_hack centre_view;
extern bool_hack no_centre_run;
extern bool_hack view_perma_grids;
extern bool_hack view_torch_grids;
extern bool_hack flow_by_sound;
extern bool_hack flow_by_smell;
extern bool_hack track_follow;
extern bool_hack track_target;
extern bool_hack stack_allow_items;
extern bool_hack stack_allow_wands;
extern bool_hack stack_force_notes;
extern bool_hack stack_force_costs;
extern bool_hack view_reduce_lite;
extern bool_hack view_reduce_view;
extern bool_hack auto_haggle;
extern bool_hack auto_scum;
extern bool_hack expand_look;
extern bool_hack expand_list;
extern bool_hack dungeon_align;
extern bool_hack dungeon_stair;
extern bool_hack dungeon_small;
extern bool_hack smart_learn;
extern bool_hack smart_cheat;
extern bool_hack show_labels;
extern bool_hack show_weights;
extern bool_hack show_choices;
extern bool_hack show_details;
extern bool_hack testing_stack;
extern bool_hack monsters_carry;
extern bool_hack debug_peek;
extern bool_hack debug_hear;
extern bool_hack debug_room;
extern bool_hack debug_xtra;
extern bool_hack debug_know;
extern bool_hack debug_live;
extern bool_hack debug_wild;
extern bool_hack small_levels;
extern bool_hack empty_levels;
extern bool_hack player_symbols;
extern bool_hack equippy_chars;
extern s16b hitpoint_warn;
extern s16b delay_factor;
extern s16b autosave_freq;
extern bool_hack autosave_t;
extern bool_hack autosave_l;
extern s16b feeling;
extern s16b rating;
extern bool_hack good_item_flag;
extern bool_hack new_level_flag;
extern bool_hack closing_flag;
extern s16b max_panel_rows, max_panel_cols;
extern s16b panel_row, panel_col;
extern s16b panel_row_min, panel_row_max;
extern s16b panel_col_min, panel_col_max;
extern s16b panel_col_prt, panel_row_prt;
extern s16b py;
extern s16b px;
extern s16b wildx;
extern s16b wildy;
extern s16b target_who;
extern s16b target_col;
extern s16b target_row;
extern s16b health_who;
extern s16b monster_race_idx;
extern s16b term_k_idx;
extern int player_uid;
extern int player_euid;
extern int player_egid;
extern char player_name[40];
extern char player_base[40];
extern char died_from[80];
extern char history[4][70];
extern char savefile[1024];
extern s16b lite_n;
extern byte_hack lite_y[128];
extern byte_hack lite_x[128];
extern s16b view_n;
extern byte_hack view_y[1536];
extern byte_hack view_x[1536];
extern s16b temp_n;
extern byte_hack temp_y[1536];
extern byte_hack temp_x[1536];
extern s16b macro__num;
extern cptr *macro__pat;
extern cptr *macro__act;
extern bool_hack *macro__cmd;
extern char *macro__buf;
extern s16b quark__num;
extern cptr *quark__str;
extern u16b message__next;
extern u16b message__last;
extern u16b message__head;
extern u16b message__tail;
extern u16b *message__ptr;
extern char *message__buf;
extern u32b option_flag[8];
extern u32b option_mask[8];
extern u32b window_flag[8];
extern u32b window_mask[8];
extern term *angband_term[8];
extern char angband_term_name[8][16];
extern byte_hack angband_colour_table[256][4];
extern char angband_sound_name[29][16];
extern cave_type *cave[66];
extern object_type *o_list;
extern monster_type *m_list;
extern monster_type *p_list;
extern quest q_list[2];
extern int MAX_Q_IDX;
extern store_type *store;
extern object_type *inventory;
extern s16b alloc_kind_size;
extern alloc_entry *alloc_kind_table;
extern s16b alloc_race_size;
extern alloc_entry *alloc_race_table;
extern byte_hack misc_to_attr[128];
extern char misc_to_char[128];
extern byte_hack tval_to_attr[128];
extern char tval_to_char[128];
extern cptr keymap_act[2][256];
extern player_type p_body;
extern player_race p_race;
extern player_type *p_ptr;
extern player_sex *sp_ptr;
extern player_race *rp_ptr;
extern player_class *cp_ptr;
extern class_magic *mp_ptr;
extern player_race *bsp_ptr;
extern char short_info[25];
extern u32b spell_learned1;
extern u32b spell_learned2;
extern u32b spell_worked1;
extern u32b spell_worked2;
extern u32b spell_forgotten1;
extern u32b spell_forgotten2;
extern byte_hack spell_order[64];
extern s16b player_hp[50];
extern header *v_head;
extern vault_type *v_info;
extern char *v_name;
extern char *v_text;
extern header *f_head;
extern feature_type *f_info;
extern char *f_name;
extern char *f_text;
extern header *k_head;
extern object_kind *k_info;
extern char *k_name;
extern char *k_text;
extern header *a_head;
extern artefact_type *a_info;
extern char *a_name;
extern char *a_text;
extern header *e_head;
extern ego_item_type *e_info;
extern char *e_name;
extern char *e_text;
extern header *r_head;
extern monster_race *r_info;
extern char *r_name;
extern char *r_text;
extern cptr ANGBAND_SYS;
extern cptr ANGBAND_DIR;
extern cptr ANGBAND_DIR_APEX;
extern cptr ANGBAND_DIR_BONE;
extern cptr ANGBAND_DIR_DATA;
extern cptr ANGBAND_DIR_EDIT;
extern cptr ANGBAND_DIR_FILE;
extern cptr ANGBAND_DIR_HELP;
extern cptr ANGBAND_DIR_INFO;
extern cptr ANGBAND_DIR_SAVE;
extern cptr ANGBAND_DIR_PREF;
extern cptr ANGBAND_DIR_XTRA;
extern cptr ANGBAND_DIR_USER;
extern cptr ANGBAND_DIR_DUMP;
extern bool_hack item_tester_full;
extern byte_hack item_tester_tval;
extern bool_hack (*item_tester_hook)(object_type *o_ptr);
extern bool_hack (*ang_sort_comp)(vptr u, vptr v, int a, int b);
extern void (*ang_sort_swap)(vptr u, vptr v, int a, int b);
extern bool_hack (*monster_filter_hook)(int r_idx);
extern bool_hack (*get_obj_num_hook)(int k_idx);
extern bool_hack angband_keymap_flag;
extern bool_hack mystic_armour_aux;
extern bool_hack mystic_notify_aux;
extern alchemy_info potion_alch[64];
extern u32b seed_alchemy;






extern void create_random_name( int type , byte_hack sex , char *name );
extern void player_birth(void);
extern void outfit(object_type *q_ptr);


extern int distance(int y1, int x1, int y2, int x2);
extern bool_hack los(int y1, int x1, int y2, int x2);
extern bool_hack player_can_see_bold(int y, int x);
extern bool_hack cave_valid_bold(int y, int x);
extern bool_hack no_lite(void);

extern void map_info(int y, int x, byte_hack *ap, char *cp, byte_hack *tap, char *tcp);



extern void move_cursor_relative(int row, int col);
extern void print_rel(char c, byte_hack a, int y, int x);
extern void note_spot(int y, int x);
extern void lite_spot(int y, int x);
extern void prt_map(void);
extern void display_map(int *cy, int *cx);
extern void do_cmd_view_map(void);
extern void forget_lite(void);
extern void update_lite(void);
extern void forget_view(void);
extern void update_view(void);
extern void forget_flow(void);
extern void update_flow(void);
extern void map_area(void);
extern void wiz_lite(void);
extern void wiz_dark(void);
extern void cave_set_feat(int y, int x, int feat);
extern void mmove2(int *y, int *x, int y1, int x1, int y2, int x2);
extern bool_hack projectable(int y1, int x1, int y2, int x2);
extern void scatter(int *yp, int *xp, int y, int x, int d, int m);
extern void health_track(int m_idx);
extern void monster_race_track(int r_idx);
extern void object_track( object_type *o_ptr , cptr activity );
extern void object_kind_track(int k_idx);
extern void disturb(int stop_search, int flush_output);
extern bool_hack is_quest(int level);


extern bool_hack test_hit_fire(int chance, int ac, int vis);
extern bool_hack test_hit_norm(int chance, int ac, int vis);
extern s16b critical_shot(int weight, int plus, int dam);
extern s16b critical_norm(int weight, int plus, int dam);
extern s16b tot_dam_aux(object_type *o_ptr, int tdam, monster_type *m_ptr);
extern void search(void);
extern void carry(int pickup);
extern void py_attack(int y, int x);
extern void move_player(int dir, int do_pickup);
extern void run_step(int dir);
extern void term_show_most_expensive_item( int x , int y , cptr activity );


extern void do_cmd_go_up(void);
extern void do_cmd_go_down(void);
extern void do_cmd_search(void);
extern void do_cmd_toggle_search(void);
extern void do_cmd_open(void);
extern void do_cmd_close(void);
extern void do_cmd_tunnel(void);
extern void do_cmd_disarm(void);
extern void do_cmd_bash(void);
extern void do_cmd_alter(void);
extern void do_cmd_handle(void);
extern void do_cmd_spike(void);
extern void do_cmd_walk(int pickup);
extern void do_cmd_stay(int pickup);
extern void do_cmd_run(void);
extern void do_cmd_rest(void);
extern void do_cmd_fire(void);
extern void do_cmd_throw(void);
extern int chest_check(int y, int x);


extern void do_cmd_inven(void);
extern void do_cmd_equip(void);
extern void do_cmd_wield(void);
extern void do_cmd_takeoff(void);
extern void do_cmd_drop(void);
extern void do_cmd_destroy(void);
extern void do_cmd_observe(void);
extern void do_cmd_destroy_all(void);
extern void do_cmd_uninscribe(void);
extern void do_cmd_inscribe(void);
extern void do_cmd_refill(int);
extern void do_cmd_target(void);
extern void do_cmd_look(void);
extern void do_cmd_locate(void);
extern void do_cmd_query_symbol(void);
extern void do_cmd_racial_power(void);
extern void destroy_pack(void);
extern void do_cmd_time(void);
extern void do_cmd_screen_dump(void);
extern void do_cmd_gain_spell(void);
extern void do_cmd_magic_spell(void);


extern void do_cmd_redraw(void);
extern void do_cmd_change_name(void);
extern void do_cmd_message_one(void);
extern void do_cmd_messages(void);
extern void do_cmd_options(void);
extern void do_cmd_pref(void);
extern void do_cmd_macros(void);
extern void do_cmd_visuals(void);
extern void do_cmd_colours(void);
extern void do_cmd_note(void);
extern void do_cmd_version(void);
extern void do_cmd_feeling(bool_hack);
extern void restore_screen( void );
extern void do_cmd_load_screen( cptr path , cptr file );
extern void do_cmd_save_screen(void);
extern void do_cmd_knowledge(void);
extern void do_cmd_options_aux(int,cptr);

extern void do_cmd_browse(int);
extern void do_cmd_study(void);
extern void do_cmd_cast(void);
extern void do_cmd_pray(void);
extern void do_cmd_mindcraft(void);
extern void do_poly_self(void);
extern void do_poly_wounds(void);


extern void do_cmd_eat_food(int);
extern void do_cmd_quaff_potion(int);
extern void do_cmd_read_scroll(int);
extern void do_cmd_aim_wand(int);
extern void do_cmd_use_staff(int);
extern void do_cmd_zap_rod(int);
extern void do_cmd_activate(int);
extern void do_cmd_mix(void);


extern void play_game(bool_hack new_game);
extern bool_hack psychometry(void);
extern cptr value_check_aux1(object_type *o_ptr);
extern cptr value_check_aux2(object_type *o_ptr);
extern bool_hack has_heavy_pseudo_id(void);
extern void do_recall( cptr activation );



extern int player_uid;
extern int player_egid;

extern void safe_setuid_drop(void);
extern void safe_setuid_grab(void);
extern s16b tokenize(char *buf, s16b num, char **tokens);
extern void display_player(int mode);
extern errr file_character(cptr name, bool_hack full);
extern errr process_pref_file_aux(char *buf);
extern errr process_pref_file(cptr name);
extern void print_equippy(void);
extern errr check_time_init(void);
extern errr check_load_init(void);
extern errr check_time(void);
extern errr check_load(void);
extern void read_times(void);
extern errr show_file(cptr name, cptr what);
extern void do_cmd_help(cptr name);
extern void process_player_name(void);
extern void get_name(void);
extern void do_cmd_suicide(void);
extern void do_cmd_save_game(void);
extern long total_points(void);
extern void display_scores(int from, int to);
extern void close_game(void);
extern void exit_game_panic(void);
extern void signals_ignore_tstp(void);
extern void signals_handle_tstp(void);
extern void signals_init(void);
extern errr get_rnd_line(char * file_name, char * output);
extern void race_score(int race_num);
extern void show_highclass(int pclass, int psubclasscode);
extern void html_screenshot(cptr name, int mode);
extern int calc_freak_stat_bonus(int stat);
extern void player_flags(u32b *f1, u32b *f2, u32b *f3);


extern void generate_cave(void);
void replace_secret_door(int y, int x);
extern int level_across(int, int);


extern errr init_v_info_txt(FILE *fp, char *buf);
extern errr init_f_info_txt(FILE *fp, char *buf);
extern errr init_k_info_txt(FILE *fp, char *buf);
extern errr init_a_info_txt(FILE *fp, char *buf);
extern errr init_e_info_txt(FILE *fp, char *buf);
extern errr init_r_info_txt(FILE *fp, char *buf);


extern void init_file_paths( char *path , int attempt );
extern void init_angband();
extern cptr r_info_flags1[];
extern cptr r_info_flags2[];
extern cptr r_info_flags3[];
extern cptr r_info_flags4[];
extern cptr r_info_flags5[];
extern cptr r_info_flags6[];
extern void cleanup_angband(void);


extern errr rd_savefile_old(void);


extern errr rd_savefile_new(void);



extern bool_hack make_attack_normal(int m_idx);
extern bool_hack make_attack_spell(int m_idx);
extern void process_monsters(void);
extern void curse_equipment(int chance, int heavy_chance);


extern void screen_roff(int r_idx);
extern void display_roff(int r_idx);
extern void display_visible(void);
extern void display_visible_items(void);


extern s16b place_ghost(void);
extern void init_custom_race( int idx );
extern int patron_undead_servant(void);
extern int patron_demon_servant(void);
extern int patron_angel_servant(void);
extern int patron_undead_foe(void);
extern int patron_demon_foe(void);
extern int patron_angel_foe(void);
extern void delete_monster_idx(int i,bool_hack visibly);
extern void delete_monster(int y, int x);
extern void compact_monsters(int size);
extern void remove_no_pets(void);
extern void wipe_m_list(void);
extern s16b m_pop(void);
extern errr get_mon_num_prep(void);
extern s16b get_mon_num(int level);
extern void monster_desc(char *desc, monster_type *m_ptr, int mode);
extern void lore_do_probe(int m_idx);
extern void lore_treasure(int m_idx, int num_item, int num_gold);
extern void update_mon(int m_idx, bool_hack full);
extern void update_monsters(bool_hack full);
extern byte_hack place_monster_aux(int y, int x, int r_idx, bool_hack slp, bool_hack grp, bool_hack charm);
extern byte_hack place_monster(int y, int x, bool_hack slp, bool_hack grp);
extern bool_hack alloc_horde(int y, int x);
extern byte_hack alloc_monster(int dis, int slp);
extern byte_hack summon_specific(int y1, int x1, int lev, int type);
extern bool_hack multiply_monster(int m_idx, bool_hack charm, bool_hack clone);
extern void update_smart_learn(int m_idx, int what);
extern bool_hack summon_specific_friendly(int y1, int x1, int lev, int type, bool_hack Group_ok);
extern bool_hack place_monster_one(int y, int x, int r_idx, bool_hack slp, bool_hack charm);
extern void remove_non_pets(void);
extern bool_hack summon_skulls(int y1, int x1);
extern int water_ok(int r_idx);
extern int can_place_monster_type( int y , int x , int summon_type);
extern int can_place_monster( int y , int x , int r_idx);
extern int can_go_monster( int y , int x , int r_idx);
extern int monster_filter_type;
extern bool_hack monster_filter_okay(int r_idx);
extern bool_hack is_potential_hater( monster_type *m_ptr );
extern bool_hack is_ally( monster_type *m_ptr );
extern bool_hack is_player_killer( monster_type *m_ptr );
extern bool_hack is_monster_killer( monster_type *beholder , monster_type *m_ptr );
extern void set_hate_player( monster_type *m_ptr );
extern void set_ally( monster_type *m_ptr , byte_hack ally );


extern void alchemy_init(void);
extern int scan_floor(int *items, int size, int y, int x, int mode);
extern void check_experience_obj(object_type *o_ptr);

extern void flavor_init(void);
extern void reset_visuals(void);
extern void object_flags(object_type *o_ptr, u32b *f1, u32b *f2, u32b *f3);
extern void object_flags_known(object_type *o_ptr, u32b *f1, u32b *f2, u32b *f3);
extern void object_desc(char *buf, object_type *o_ptr, int pref, int mode);
extern void object_desc_store(char *buf, object_type *o_ptr, int pref, int mode);
extern bool_hack identify_fully_aux(object_type *o_ptr);
extern s16b index_to_label(int i);
extern s16b label_to_inven(int c);
extern s16b label_to_equip(int c);
extern s16b wield_slot(object_type *o_ptr);
extern cptr mention_use(int i);
extern cptr describe_use(int i);
extern void inven_item_charges(int item);
extern void inven_item_describe(int item);
extern void inven_item_increase(int item, int num);
extern void inven_item_optimize(int item);
extern void floor_item_charges(int item);
extern void floor_item_describe(int item);
extern void floor_item_increase(int item, int num);
extern void floor_item_optimize(int item);
extern void distribute_charges(object_type *o_ptr, object_type *q_ptr, int amt);
extern bool_hack inven_carry_okay(object_type *o_ptr);
extern s16b inven_carry(object_type *o_ptr, bool_hack final);
extern s16b inven_takeoff(int item, int amt);
extern void inven_drop(int item, int amt);
extern bool_hack item_tester_okay(object_type *o_ptr);
extern void display_inven(void);
extern void display_equip(void);
extern void show_inven(void);
extern void show_equip(void);
extern void toggle_inven_equip(void);
extern bool_hack get_item(int *cp, cptr pmt, cptr str, int mode);
extern void excise_object_idx(int o_idx);
extern void delete_object_idx(int o_idx);
extern void delete_object(int y, int x);
extern void compact_objects(int size);
extern void wipe_o_list(void);
extern s16b o_pop(void);
extern errr get_obj_num_prep(void);
extern s16b get_obj_num(int level);
extern void object_known(object_type *o_ptr, bool_hack squelch );
extern void object_aware(object_type *o_ptr);
extern void object_full_id(object_type *o_ptr);
extern void object_storebought(object_type *o_ptr);
extern void object_tried(object_type *o_ptr);
extern s32b object_value(object_type *o_ptr);
extern s32b object_value_real(object_type *o_ptr);
extern bool_hack object_similar(object_type *o_ptr, object_type *j_ptr);
extern void object_absorb(object_type *o_ptr, object_type *j_ptr);
extern s16b lookup_kind(int tval, int sval);
extern void object_wipe(object_type *o_ptr);
extern void object_prep(object_type *o_ptr, int k_idx);
extern void object_copy(object_type *o_ptr, object_type *j_ptr);
extern void apply_magic(object_type *o_ptr, int lev, bool_hack okay, bool_hack good, bool_hack great);
extern bool_hack make_object(object_type *j_ptr, bool_hack good, bool_hack great);
extern void place_object(int y, int x, bool_hack good, bool_hack great);
extern bool_hack make_gold(object_type *j_ptr);
extern void place_gold(int y, int x);
extern void process_objects(void);
extern s16b drop_near(object_type *o_ptr, int chance, int y, int x);
extern void acquirement(int y1, int x1, int num, bool_hack great);
extern void pick_trap(int y, int x);
extern void place_trap(int y, int x);
extern cptr item_activation(object_type *o_ptr);
extern void combine_pack(void);
extern void reorder_pack(void);
extern s16b spell_chance(int spell,int realm);
extern bool_hack spell_okay(int spell, bool_hack known, int realm);
extern void print_spells(byte_hack *spells, int num, int y, int x, int realm);
extern void display_koff(int k_idx);
extern void random_artefact_resistance (object_type * o_ptr);
extern void alchemy_describe(char *buf, size_t max, int sval);
extern void do_squelch(void);
extern void consider_squelch( object_type *o_ptr );
extern void spell_info_short(char *p, int spell, int realm);
extern void spoil_spells( object_type *o_ptr );


extern bool_hack save_player(void);
extern bool_hack load_player(void);


extern s16b poly_r_idx(int r_idx);
extern void teleport_away(int m_idx, int dis);
extern void teleport_player(int dis);
extern void teleport_player_to(int ny, int nx);
extern void teleport_player_level(void);
extern void take_hit(int damage, cptr kb_str);
extern void acid_dam(int dam, cptr kb_str);
extern void elec_dam(int dam, cptr kb_str);
extern void fire_dam(int dam, cptr kb_str);
extern void cold_dam(int dam, cptr kb_str);
extern bool_hack inc_stat(int stat);
extern bool_hack dec_stat(int stat, int amount, int permanent);
extern bool_hack res_stat(int stat);
extern bool_hack apply_disenchant(int mode);
extern bool_hack project(int who, int rad, int y, int x, int dam, int typ, int flg);
extern bool_hack potion_smash_effect(int who, int y, int x, object_type *o_ptr);
extern void get_extended_spell_info( u16b realm , int spell , magic_type *s_ptr );


extern bool_hack hp_player(int num);
extern bool_hack sp_player(int num);
extern void mind_leech(void);
extern void body_leech(void);
extern void warding_glyph(void);
extern void explosive_rune(void);
extern bool_hack do_dec_stat(int stat);
extern bool_hack do_res_stat(int stat);
extern bool_hack do_inc_stat(int stat);
extern void identify_pack(void);
extern void message_pain(int m_idx, int dam);
extern bool_hack remove_curse(void);
extern bool_hack remove_all_curse(void);
extern bool_hack restore_level(void);
extern void self_knowledge(void);
extern bool_hack lose_all_info(void);
extern bool_hack detect_traps(void);
extern bool_hack detect_doors(void);
extern bool_hack detect_stairs(void);
extern bool_hack detect_treasure(void);
extern bool_hack detect_objects_gold(void);
extern bool_hack detect_objects_normal(void);
extern bool_hack detect_objects_magic(bool_hack detect_entire_floor, bool_hack do_instant_pseudo_id);
extern bool_hack detect_monsters_normal(void);
extern bool_hack detect_monsters_invis(void);
extern bool_hack detect_monsters_evil(void);
extern bool_hack charm_all_goats(void);
extern bool_hack detect_monsters_xxx(u32b match_flag);
extern bool_hack detect_monsters_string(cptr);
extern bool_hack detect_monsters_nonliving(void);
extern bool_hack detect_all(void);
extern void stair_creation(void);
extern bool_hack wall_stone(void);
extern bool_hack enchant(object_type *o_ptr, int n, int eflag);
extern bool_hack enchant_spell(int num_hit, int num_dam, int num_ac);
extern bool_hack create_artefact(object_type *o_ptr, bool_hack a_scroll);
extern bool_hack artefact_scroll();
extern bool_hack ident_spell(void);
extern bool_hack identify_fully(void);
extern bool_hack recharge(int num);
extern bool_hack speed_monsters(void);
extern bool_hack slow_monsters(void);
extern bool_hack sleep_monsters(void);
extern void aggravate_monsters(int who);
extern bool_hack genocide(bool_hack player_cast);
extern bool_hack mass_genocide(bool_hack player_cast);
extern bool_hack probing(void);
extern bool_hack banish_evil(int dist);
extern bool_hack dispel_evil(int dam);
extern bool_hack dispel_good(int dam);
extern bool_hack dispel_undead(int dam);
extern bool_hack dispel_monsters(int dam);
extern bool_hack dispel_living(int dam);
extern bool_hack dispel_demons(int dam);
extern bool_hack dispel_devils(int dam);
extern bool_hack dispel_fallen_angels(int dam);
extern bool_hack turn_undead(void);
extern void destroy_area(int y1, int x1, int r, bool_hack full);
extern void earthquake(int cy, int cx, int r);
extern void lite_room(int y1, int x1);
extern void unlite_room(int y1, int x1);
extern bool_hack lite_area(int dam, int rad);
extern bool_hack lite_area_hecate(int dam, int rad);
extern bool_hack unlite_area(int dam, int rad);
extern bool_hack fire_ball(int typ, int dir, int dam, int rad);
extern bool_hack fire_bolt(int typ, int dir, int dam);
extern void call_chaos(void);
extern bool_hack fire_beam(int typ, int dir, int dam);
extern bool_hack fire_bolt_or_beam(int prob, int typ, int dir, int dam);
extern bool_hack lite_line(int dir);
extern bool_hack drain_life(int dir, int dam);
extern bool_hack death_ray(int dir, int plev);
extern bool_hack wall_to_mud(int dir);
extern bool_hack destroy_door(int dir);
extern bool_hack disarm_trap(int dir);
extern bool_hack wizard_lock(int dir);
extern bool_hack heal_monster(int dir);
extern bool_hack speed_monster(int dir);
extern bool_hack slow_monster(int dir);
extern bool_hack sleep_monster(int dir);
extern bool_hack stasis_monster(int dir);
extern bool_hack confuse_monster(int dir, int plev);
extern bool_hack stun_monster(int dir, int plev);
extern bool_hack fear_monster(int dir, int plev);
extern bool_hack poly_monster(int dir);
extern bool_hack clone_monster(int dir);
extern bool_hack teleport_monster(int dir);
extern bool_hack door_creation(void);
extern bool_hack trap_creation(void);
extern bool_hack glyph_creation(void);
extern bool_hack destroy_doors_touch(void);
extern bool_hack sleep_monsters_touch(void);
extern bool_hack alchemy(void);
extern void activate_ty_curse();
extern void activate_hi_summon();
extern void summon_reaver();
extern void wall_breaker();
extern void bless_weapon();
extern bool_hack confuse_monsters(int dam);
extern bool_hack charm_monsters(int dam);
extern bool_hack charm_animals(int dam);
extern bool_hack stun_monsters(int dam);
extern bool_hack stasis_monsters(int dam);
extern bool_hack banish_monsters(int dist);
extern bool_hack turn_monsters(int dam);
extern bool_hack turn_evil(int dam);
extern bool_hack deathray_monsters(void);
extern bool_hack charm_monster(int dir, int plev);
extern bool_hack charm_monster_type( int dir , int plev , int type );
extern bool_hack control_one_undead(int dir, int plev);
extern bool_hack charm_animal(int dir, int plev);
extern bool_hack mindblast_monsters(int dam);
extern bool_hack item_tester_hook_recharge(object_type *o_ptr);
extern void report_magics(void);
extern void teleport_swap(int dir);
extern void alter_reality(void);
extern void malphas_gift(void);
extern void behemoth_call(void);
extern int spell_dimensional_gate(int plev);
extern bool_hack spell_basic_resistance(int duration);


extern void do_cmd_store(void);
extern void store_shuffle(int which);

extern void store_maint_all( int times );
extern void store_init(int which);
extern void move_to_black_market(object_type * o_ptr);
extern int get_which_store(void);
extern void do_store_browse( object_type *o_ptr);

extern errr path_parse(char *buf, size_t max, cptr file);
extern errr path_temp(char *buf, int max);
extern errr path_build(char *buf, int max, cptr path, cptr file);
extern FILE *my_fopen(cptr file, cptr mode);
extern errr my_fgets(FILE *fff, char *buf, huge_hack n);
extern errr my_fputs(FILE *fff, cptr buf, huge_hack n);
extern errr my_fclose(FILE *fff);
extern errr fd_kill(cptr file);
extern errr fd_move(cptr file, cptr what);
extern errr fd_copy(cptr file, cptr what);
extern int fd_make(cptr file, int mode);
extern int fd_open(cptr file, int flags);
extern errr fd_lock(int fd, int what);
extern errr fd_seek(int fd, huge_hack n);
extern errr fd_chop(int fd, huge_hack n);
extern errr fd_read(int fd, char *buf, huge_hack n);
extern errr fd_write(int fd, cptr buf, huge_hack n);
extern errr fd_close(int fd);
extern void flush(void);
extern void bell(void);
extern void sound(int num);
extern void move_cursor(int row, int col);
extern void text_to_ascii(char *buf, cptr str);
extern void ascii_to_text(char *buf, cptr str);
extern void keymap_init(void);
extern errr macro_add(cptr pat, cptr act);
extern sint macro_find_exact(cptr pat);
extern char inkey(void);
extern cptr quark_str(s16b num);
extern s16b quark_add(cptr str);
extern s16b message_num(void);
extern cptr message_str(s16b age);
extern void message_add(cptr msg);
extern void msg_print(cptr msg);
extern void msg_note(cptr msg);
extern void msg_bell(cptr msg);
extern void msg_format(cptr fmt, ...);
extern void msg_fiddle(cptr fmt, ...);
extern void c_put_str(byte_hack attr, cptr str, int row, int col);
extern void put_str(cptr str, int row, int col);
extern void c_prt(byte_hack attr, cptr str, int row, int col);
extern void prt(cptr str, int row, int col);
extern void c_roff(byte_hack a, cptr str, int px , int py, int startx);
extern void roff(cptr str);
extern void clear_screen(void);
extern void clear_from(int row);
extern bool_hack askfor_aux(char *buf, int len);
extern bool_hack get_string(cptr prompt, char *buf, int len);
extern bool_hack get_check(cptr prompt);
extern bool_hack get_com(cptr prompt, char *command);
extern bool_hack get_com_rep(cptr prompt, char *command);
extern s16b get_quantity(cptr prompt, int max,bool_hack allbydefault);
extern void pause_line(int row);
extern void request_command(bool_hack shopping);
extern bool_hack is_a_vowel(int ch);
extern int get_keymap_dir(char ch);
extern void msg_flush_wait(void);
extern char menu_key_help(void);


extern void cnv_stat(int val, char *out_val);
extern s16b modify_stat_value(int value, int amount);
extern void notice_stuff(void);
extern void update_stuff(void);
extern void redraw_stuff(void);
extern void window_stuff(void);
extern void handle_stuff(void);
extern bool_hack mystic_empty_hands();
extern bool_hack mystic_heavy_armour();
extern void day_to_date(s16b day,char *date);
extern byte_hack health_colour( s16b current, s16b max );


extern bool_hack set_timed_effect( byte_hack effect , int v );
extern bool_hack set_food(int v);
extern void check_experience(void);
extern void gain_exp(s32b amount);
extern void lose_exp(s32b amount);
extern void monster_death(int m_idx);
extern bool_hack mon_take_hit(int m_idx, int dam, bool_hack *fear, cptr note);
extern void panel_bounds(void);
extern void panel_bounds_center(void);
extern void verify_panel(void);
extern cptr look_mon_desc(int m_idx);
extern bool_hack ang_sort_comp_visible_hook(vptr u, vptr v, int a, int b);
extern void ang_sort_swap_visible_hook(vptr u, vptr v, int a, int b);
extern void ang_sort_swap_hook(vptr u, vptr v, int a, int b);
extern bool_hack ang_sort_comp_hook(vptr u, vptr v, int a, int b);
extern void ang_sort_aux(vptr u, vptr v, int p, int q);
extern void ang_sort(vptr u, vptr v, int n);
extern bool_hack target_able(int m_idx);
extern bool_hack target_okay(void);
extern bool_hack target_set(int mode);
extern bool_hack get_aim_dir(int *dp);
extern bool_hack get_hack_dir(int *dp);
extern bool_hack get_rep_dir(int *dp);
extern int get_evil_patron();
extern void gain_level_reward(int chosen_reward);
extern bool_hack tgp_pt(int *x, int * y);
extern bool_hack tgt_pt (int *x, int *y);
extern bool_hack gain_corruption(int choose_mut);
extern void dump_corruptions(FILE *OutFile);
extern bool_hack lose_corruption(int choose_mut);
extern u32b *corruption_idx_to_u32b(byte_hack b);
extern reward_type patron_rewards[];
extern void calculate_xp(monster_race *r_ptr, s32b *exp , s32b *exp_frac);


extern int get_quest_monster(void);
extern int get_max_monster(void);
extern int get_quest_number(void);
extern void print_quest_message(void);
extern void quest_discovery(void);
extern int next_quest_level(void);
extern void initialise_quests();
extern int get_number_monster(int i);
extern int get_rnd_q_monster(int q_idx);
extern void player_birth_quests(void);
extern void put_quest_monster(int r_idx);



extern void spoiler_print_analyze_art(FILE *fff, object_type *q_ptr);







extern void user_name(char *buf, int id);
# 1074 "./externs.h"
extern int stricmp(cptr a, cptr b);
# 1095 "./externs.h"
extern void repeat_push(int what);
extern bool_hack repeat_pull(int *what);
extern void repeat_clear(void);
extern void repeat_push_char(char what);
extern bool_hack repeat_pull_char(char *what);
extern void repeat_check(void);

extern char *script;
extern char variable_token[80];
extern char dice_mode;
extern void eval_script(double *out);
extern void plog_fmt_fiddle(cptr fmt, ...);


extern bool_hack easy_open;
extern cptr ANGBAND_GRAF;
extern bool_hack arg_fiddle;
extern bool_hack arg_wizard;
extern bool_hack arg_sound;
extern bool_hack arg_graphics;
extern bool_hack arg_force_original;
extern bool_hack arg_force_roguelike;
extern int arg_tile_size;

extern bool_hack easy_disarm;
extern bool_hack reallyTRUE;
extern object_type *term_o_ptr;
extern cptr term_activity;


extern bool_hack easy_open_door(int y, int x);
bool_hack do_cmd_disarm_aux(int y, int x, int dir);
# 54 "./angband.h" 2
# 21 "main.c" 2
# 36 "main.c"
static void quit_hook(cptr s)
{
 int j;


 (void)s;


 for (j = 8 - 1; j >= 0; j--)
 {

  if (!angband_term[j]) continue;


  term_nuke(angband_term[j]);
 }
}
# 91 "main.c"
static void init_stuff(void)
{
 char path[1024];
# 102 "main.c"
 cptr tail;


 tail = getenv("ANGBAND_PATH");


 strcpy(path, tail ? tail : "./lib/");


 if (!suffix(path, "/")) strcat(path, "/");




 init_file_paths(path,1);
}
# 130 "main.c"
static void change_path(cptr info)
{
 cptr s;


 s = strchr(info, '=');


 if (!s) quit_fmt("Try '-d<what>=<path>' not '-d%s'", info);


 switch (tolower(info[0]))
 {
 case 'a':
  {
   string_free(ANGBAND_DIR_APEX);
   ANGBAND_DIR_APEX = string_make(s+1);
   break;
  }

 case 'f':
  {
   string_free(ANGBAND_DIR_FILE);
   ANGBAND_DIR_FILE = string_make(s+1);
   break;
  }

 case 'h':
  {
   string_free(ANGBAND_DIR_HELP);
   ANGBAND_DIR_HELP = string_make(s+1);
   break;
  }

 case 'i':
  {
   string_free(ANGBAND_DIR_INFO);
   ANGBAND_DIR_INFO = string_make(s+1);
   break;
  }

 case 'u':
  {
   string_free(ANGBAND_DIR_PREF);
   ANGBAND_DIR_PREF = string_make(s+1);
   break;
  }

 case 'x':
  {
   string_free(ANGBAND_DIR_XTRA);
   ANGBAND_DIR_XTRA = string_make(s+1);
   break;
  }
# 197 "main.c"
 case 'b':
  {
   string_free(ANGBAND_DIR_BONE);
   ANGBAND_DIR_BONE = string_make(s+1);
   break;
  }

 case 'd':
  {
   string_free(ANGBAND_DIR_DATA);
   ANGBAND_DIR_DATA = string_make(s+1);
   break;
  }

 case 'e':
  {
   string_free(ANGBAND_DIR_EDIT);
   ANGBAND_DIR_EDIT = string_make(s+1);
   break;
  }

 case 's':
  {
   string_free(ANGBAND_DIR_SAVE);
   ANGBAND_DIR_SAVE = string_make(s+1);
   break;
  }



 default:
  {
   quit_fmt("Bad semantics in '-d%s'", info);
  }
 }
}


errr dump_test()
{
 char buf[1024];
 FILE *fff = ((void*)0);

 strcpy( buf, "./killmenow");
 fff = my_fopen(buf, "w");

 if (!fff)
 {

  puts("Could not open test file");

  return (-1);
 }
 else
 {

  fprintf(fff, "[Hellband %d.%d.%d Test]\n", 0, 8, 7);

  my_fclose(fff);

  return (0);
 }
}
# 269 "main.c"
int main(int argc, char *argv[])
{
 int i;

 bool_hack done = 0;

 bool_hack new_game = 0;

 int show_score = 0;

 cptr mstr = ((void*)0);

 bool_hack args = 1;



 argv0 = argv[0];
# 300 "main.c"
 (void)umask(022);




 init_stuff();





 player_uid = getuid();
# 323 "main.c"
 player_euid = geteuid();
 player_egid = getegid();
# 353 "main.c"
 if (check_time_init() || check_time())
 {
  quit("The Gates of Slumber are closed (bad time).");
 }


 if (check_load_init() || check_load())
 {
  quit("The Gates of Slumber are closed (bad load).");
 }


 user_name(player_name, player_uid);





 for (i = 1; args && (i < argc); i++)
 {

  if (argv[i][0] != '-') goto usage;


  switch (argv[i][1])
  {


  case 'p': break;
  case 'N':
  case 'n':
   {
    new_game = 1;
    break;
   }

  case 'F':
  case 'f':
   {
    arg_fiddle = 1;
    break;
   }

  case 'V':
  case 'v':
   {
    arg_sound = 1;
    break;
   }

  case 'G':
  case 'g':
   {
    arg_graphics = 1;
    break;
   }

  case 'R':
  case 'r':
   {
    arg_force_roguelike = 1;
    break;
   }

  case 'O':
  case 'o':
   {
    arg_force_original = 1;
    break;
   }

  case 'S':
  case 's':
   {
    show_score = atoi(&argv[i][2]);
    if (show_score <= 0) show_score = 10;
    break;
   }

  case 'u':
  case 'U':
   {
    if (!argv[i][2]) goto usage;
    strcpy(player_name, &argv[i][2]);
    break;
   }

  case 'm':
  case 'M':
   {
    if (!argv[i][2]) goto usage;
    mstr = &argv[i][2];
    break;
   }

  case 'd':
  case 'D':
   {
    change_path(&argv[i][2]);
    break;
   }

  case '-':
   {
    argv[i] = argv[0];
    argc = argc - i;
    argv = argv + i;
    args = 0;
    break;
   }

  default:
usage:
   {

    puts("You started hellband with this parameter :");
    puts( argv[i] );
    puts("Usage: Hellband [options] [-- subopts]");
    puts("  -n       Start a new character");
    puts("  -f       Request fiddle mode");
    puts("  -v       Request sound mode");
    puts("  -g       Request graphics mode");
    puts("  -o       Request original keyset");
    puts("  -r       Request rogue-like keyset");
    puts("  -s<num>  Show <num> high scores");
    puts("  -u<who>  Use your <who> savefile");
    puts("  -m<sys>  Force 'main-<sys>.c' usage");
    puts("  -d<def>  Define a 'lib' dir sub-path");


    quit(((void*)0));
   }
  }
 }


 if (args)
 {
  argc = 1;
  argv[1] = ((void*)0);
 }



 process_player_name();




 quit_aux = quit_hook;



 safe_setuid_drop();
# 539 "main.c"
 if (!done && (!mstr || (streq(mstr, "gcu"))))
 {
  extern errr init_gcu(int, char**);
  if (0 == init_gcu(argc, argv))
  {
   ANGBAND_SYS = "gcu";
   done = 1;
  }
 }
# 649 "main.c"
 safe_setuid_grab();



 if (!done) quit("Unable to prepare any 'display module'!");



 if (show_score > 0) display_scores(0, show_score);



 signals_init();


 init_angband();


 pause_line(23);


 play_game(new_game);


 quit(((void*)0));


 return (0);
}
